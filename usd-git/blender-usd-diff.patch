diff -aur USD-20.05/cmake/defaults/Packages.cmake USD-20.05.new/cmake/defaults/Packages.cmake
--- USD-20.05/cmake/defaults/Packages.cmake	2020-04-13 20:32:52.000000000 +0200
+++ USD-20.05.new/cmake/defaults/Packages.cmake	2020-09-07 11:08:12.521684849 +0200
@@ -109,7 +109,7 @@
 endif()
 
 # --TBB
-find_package(TBB REQUIRED COMPONENTS tbb)
+find_package(TBB)
 add_definitions(${TBB_DEFINITIONS})
 
 # --math
diff -aur USD-20.05/cmake/macros/Public.cmake USD-20.05.new/cmake/macros/Public.cmake
--- USD-20.05/cmake/macros/Public.cmake	2020-04-13 20:32:52.000000000 +0200
+++ USD-20.05.new/cmake/macros/Public.cmake	2020-09-07 11:11:20.327071007 +0200
@@ -1035,6 +1035,12 @@
     foreach(lib ${PXR_OBJECT_LIBS})
         string(TOUPPER ${lib} uppercaseName)
         list(APPEND exports "${uppercaseName}_EXPORTS=1")
+        # When building for blender, we do NOT want to export all symbols on windows.
+        # This is a dirty hack, but USD makes it impossible to do the right thing
+        # with the default options exposed.
+        if (WIN32)
+            list(APPEND exports "PXR_STATIC=1")
+        endif()
     endforeach()
     foreach(lib ${PXR_OBJECT_LIBS})
         set(objects "${objects};\$<TARGET_OBJECTS:${lib}>")
diff -aur USD-20.05/pxr/base/arch/align.h USD-20.05.new/pxr/base/arch/align.h
--- USD-20.05/pxr/base/arch/align.h	2020-04-13 20:32:52.000000000 +0200
+++ USD-20.05.new/pxr/base/arch/align.h	2020-09-07 11:27:08.440815607 +0200
@@ -77,7 +77,11 @@
 /// The size of a CPU cache line on the current processor architecture in bytes.
 ///
 /// \hideinitializer
+#if defined(ARCH_OS_DARWIN) && defined(ARCH_CPU_ARM)
+#define ARCH_CACHE_LINE_SIZE 128
+#else
 #define ARCH_CACHE_LINE_SIZE 64
+#endif
 
 ///@}
 
diff -aur USD-20.05/pxr/base/arch/math.h USD-20.05.new/pxr/base/arch/math.h
--- USD-20.05/pxr/base/arch/math.h	2020-04-13 20:32:52.000000000 +0200
+++ USD-20.05.new/pxr/base/arch/math.h	2020-09-07 11:22:58.099101353 +0200
@@ -42,7 +42,7 @@
 /// \addtogroup group_arch_Math
 ///@{
 
-#if defined (ARCH_CPU_INTEL) || defined(doxygen)
+#if defined (ARCH_CPU_INTEL) || defined(ARCH_CPU_ARM) || defined(doxygen)
 
 /// This is the smallest value e such that 1+e^2 == 1, using floats.
 /// True for all IEEE754 chipsets.
