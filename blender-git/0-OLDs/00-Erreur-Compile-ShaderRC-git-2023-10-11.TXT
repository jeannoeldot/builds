=======================================
AVEC MOLD
=========
mold: error: undefined symbol: glslang::TShader::setShiftUavBinding(unsigned int)
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
mold: error: undefined symbol: spvOptimizerOptionsDestroy
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text.unlikely)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const [clone .cold])
mold: error: undefined symbol: spvtools::Optimizer::Run(unsigned int const*, unsigned long, std::vector<unsigned int, std::allocator<unsigned int> >*, spv_optimizer_options_t*) const
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))
mold: error: undefined symbol: spvtools::SpirvTools::SetMessageConsumer(std::function<void (spv_message_level_t, char const*, spv_position_t const&, char const*)>)
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsDisassemble(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<unsigned int, std::allocator<unsigned int> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))
mold: error: undefined symbol: glslang::TShader::setShiftSsboBinding(unsigned int)
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
mold: error: undefined symbol: glslang::TShader::setShiftTextureBinding(unsigned int)
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
mold: error: undefined symbol: glslang::GlslangToSpv(glslang::TIntermediate const&, std::vector<unsigned int, std::allocator<unsigned int> >&, glslang::SpvOptions*)
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
mold: error: undefined symbol: glslang::TProgram::link(EShMessages)
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
mold: error: undefined symbol: glslang::TShader::setShiftImageBinding(unsigned int)
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
mold: error: undefined symbol: glslang::TProgram::getInfoLog()
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
mold: error: undefined symbol: spvtools::Optimizer::RegisterLegalizationPasses()
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))
mold: error: undefined symbol: spvtools::Optimizer::RegisterPass(spvtools::Optimizer::PassToken&&)
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))
mold: error: undefined symbol: glslang::TShader::setNanMinMaxClamp(bool)
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::PreprocessShader(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, shaderc_util::string_piece const&, shaderc_util::string_piece const&, shaderc_util::CountingIncluder&) const)>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
mold: error: undefined symbol: spvBinaryDestroy
>>> referenced by /usr/lib/libshaderc_combined.a(shaderc.cc.o):(.text._ZN37shaderc_compilation_result_spv_binaryD2Ev)
>>>               /usr/lib/libshaderc_combined.a(shaderc.cc.o):(shaderc_compilation_result_spv_binary::~shaderc_compilation_result_spv_binary())>>> referenced by /usr/lib/libshaderc_combined.a(shaderc.cc.o):(.text._ZN37shaderc_compilation_result_spv_binaryD0Ev)
>>>               /usr/lib/libshaderc_combined.a(shaderc.cc.o):(shaderc_compilation_result_spv_binary::~shaderc_compilation_result_spv_binary())
mold: error: undefined symbol: glslang::TShader::setInvertY(bool)
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::PreprocessShader(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, shaderc_util::string_piece const&, shaderc_util::string_piece const&, shaderc_util::CountingIncluder&) const)>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
mold: error: undefined symbol: glslang::InitializeProcess()
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::GlslangInitializer::GlslangInitializer())
mold: error: undefined symbol: spvtools::Optimizer::PassToken::~PassToken()
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text.unlikely)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [clone .cold])
mold: error: undefined symbol: glslang::TShader::setEntryPoint(char const*)
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
mold: error: undefined symbol: spvValidatorOptionsSetBeforeHlslLegalization
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))
mold: error: undefined symbol: spvOptimizerOptionsCreate
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
mold: error: undefined symbol: glslang::TShader::setTextureSamplerTransformMode(EShTextureSamplerTransformMode)
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
mold: error: undefined symbol: glslang::TShader::preprocess(TBuiltInResource const*, int, EProfile, bool, bool, EShMessages, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, glslang::TShader::Includer&)
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::PreprocessShader(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, shaderc_util::string_piece const&, shaderc_util::string_piece const&, shaderc_util::CountingIncluder&) const)
mold: error: undefined symbol: glslang::TShader::setShiftSamplerBinding(unsigned int)
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
mold: error: undefined symbol: spvtools::SpirvTools::SpirvTools(spv_target_env)
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsDisassemble(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<unsigned int, std::allocator<unsigned int> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))
mold: error: undefined symbol: glslang::FinalizeProcess()
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::GlslangInitializer::~GlslangInitializer())
mold: error: undefined symbol: spvtools::Optimizer::~Optimizer()
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text.unlikely)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [clone .cold])
mold: error: undefined symbol: glslang::TShader::parse(TBuiltInResource const*, int, EProfile, bool, bool, EShMessages, glslang::TShader::Includer&)
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
mold: error: undefined symbol: spvDiagnosticDestroy
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsAssemble(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, shaderc_util::string_piece, spv_binary_t**, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))
mold: error: undefined symbol: glslang::TShader::getInfoLog()
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::PreprocessShader(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, shaderc_util::string_piece const&, shaderc_util::string_piece const&, shaderc_util::CountingIncluder&) const)>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::PreprocessShader(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, shaderc_util::string_piece const&, shaderc_util::string_piece const&, shaderc_util::CountingIncluder&) const)>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
mold: error: undefined symbol: glslang::TProgram::TProgram()
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
mold: error: undefined symbol: spvtools::Optimizer::Optimizer(spv_target_env)
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))
mold: error: undefined symbol: glslang::TProgram::mapIO(glslang::TIoMapResolver*, glslang::TIoMapper*)
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
mold: error: undefined symbol: spvtools::SpirvTools::Disassemble(std::vector<unsigned int, std::allocator<unsigned int> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned int) const
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsDisassemble(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<unsigned int, std::allocator<unsigned int> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))
mold: error: undefined symbol: spvContextCreate
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsAssemble(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, shaderc_util::string_piece, spv_binary_t**, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))
mold: error: undefined symbol: glslang::TShader::setStringsWithLengthsAndNames(char const* const*, int const*, char const* const*, int)
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::PreprocessShader(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, shaderc_util::string_piece const&, shaderc_util::string_piece const&, shaderc_util::CountingIncluder&) const)>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
mold: error: undefined symbol: spvValidatorOptionsDestroy
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text.unlikely)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [clone .cold])
mold: error: undefined symbol: glslang::TProgram::~TProgram()
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text.unlikely)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const [clone .cold])
mold: error: undefined symbol: spvtools::Optimizer::RegisterPerformancePasses()
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))
mold: error: undefined symbol: glslang::TShader::~TShader()
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::PreprocessShader(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, shaderc_util::string_piece const&, shaderc_util::string_piece const&, shaderc_util::CountingIncluder&) const)>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text.unlikely)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::PreprocessShader(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, shaderc_util::string_piece const&, shaderc_util::string_piece const&, shaderc_util::CountingIncluder&) const [clone .cold])>>> referenced 1 more times

mold: error: undefined symbol: spvValidatorOptionsSetSkipBlockLayout
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))
mold: error: undefined symbol: spvContextDestroy
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsAssemble(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, shaderc_util::string_piece, spv_binary_t**, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))
mold: error: undefined symbol: spvOptimizerOptionsSetPreserveBindings
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
mold: error: undefined symbol: spvTextToBinary
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsAssemble(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, shaderc_util::string_piece, spv_binary_t**, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))
mold: error: undefined symbol: glslang::TShader::setAutoMapBindings(bool)
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
mold: error: undefined symbol: spvOptimizerOptionsSetValidatorOptions
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))
mold: error: undefined symbol: glslang::TShader::setResourceSetBinding(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
mold: error: undefined symbol: spvValidatorOptionsSetRelaxLogicalPointer
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))
mold: error: undefined symbol: glslang::TShader::TShader(EShLanguage)
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::PreprocessShader(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, shaderc_util::string_piece const&, shaderc_util::string_piece const&, shaderc_util::CountingIncluder&) const)>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
mold: error: undefined symbol: spvtools::CreateStripDebugInfoPass()
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))
mold: error: undefined symbol: spvtools::Optimizer::SetMessageConsumer(std::function<void (spv_message_level_t, char const*, spv_position_t const&, char const*)>)
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))
mold: error: undefined symbol: glslang::TShader::setAutoMapLocations(bool)
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
mold: error: undefined symbol: spvtools::SpirvTools::~SpirvTools()
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsDisassemble(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<unsigned int, std::allocator<unsigned int> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text.unlikely)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsDisassemble(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<unsigned int, std::allocator<unsigned int> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [clone .cold])
mold: error: undefined symbol: spvtools::Optimizer::RegisterSizePasses()
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))
mold: error: undefined symbol: spvValidatorOptionsCreate
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))
mold: error: undefined symbol: spvOptimizerOptionsSetRunValidator
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))
mold: error: undefined symbol: glslang::TShader::setHlslIoMapping(bool)
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
mold: error: undefined symbol: spvtools::CreateCompactIdsPass()
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))
mold: error: undefined symbol: glslang::TShader::setShiftUboBinding(unsigned int)
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
collect2: error: ld returned 1 exit status
make[2]: *** [source/creator/CMakeFiles/blender.dir/build.make:468: bin/blender] Error 1
make[1]: *** [CMakeFiles/Makefile2:8442: source/creator/CMakeFiles/blender.dir/all] Error 2
make: *** [Makefile:166: all] Error 2
make: Leaving directory '/build/blender-git/src/blender/build'
==================================================================

=======================================
AVEC LLD
========
/usr/lib/libshaderc_combined.a(shaderc.cc.o):function shaderc_compilation_result_spv_binary::~shaderc_compilation_result_spv_binary():(.text._ZN37shaderc_compilation_result_spv_binaryD2Ev+0x1c): error: undefined reference to 'spvBinaryDestroy'
/usr/lib/libshaderc_combined.a(shaderc.cc.o):function shaderc_compilation_result_spv_binary::~shaderc_compilation_result_spv_binary():(.text._ZN37shaderc_compilation_result_spv_binaryD0Ev+0x18): error: undefined reference to 'spvBinaryDestroy'
/usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):function shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*):(.text+0x22b): error: undefined reference to 'spvValidatorOptionsCreate'
/usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):function shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*):(.text+0x241): error: undefined reference to 'spvValidatorOptionsSetSkipBlockLayout'
/usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):function shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*):(.text+0x24f): error: undefined reference to 'spvValidatorOptionsSetRelaxLogicalPointer'
/usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):function shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*):(.text+0x25d): error: undefined reference to 'spvValidatorOptionsSetBeforeHlslLegalization'
/usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):function shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*):(.text+0x26f): error: undefined reference to 'spvOptimizerOptionsSetValidatorOptions'
/usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):function shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*):(.text+0x27e): error: undefined reference to 'spvOptimizerOptionsSetRunValidator'
/usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):function shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*):(.text+0x2a2): error: undefined reference to 'spvtools::Optimizer::Optimizer(spv_target_env)'
/usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):function shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*):(.text+0x44d): error: undefined reference to 'spvtools::Optimizer::SetMessageConsumer(std::function<void (spv_message_level_t, char const*, spv_position_t const&, char const*)>)'
/usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):function shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*):(.text+0x4a2): error: undefined reference to 'spvtools::CreateCompactIdsPass()'
/usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):function shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*):(.text+0x4ae): error: undefined reference to 'spvtools::Optimizer::RegisterPass(spvtools::Optimizer::PassToken&&)'
/usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):function shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*):(.text+0x4b7): error: undefined reference to 'spvtools::Optimizer::PassToken::~PassToken()'
/usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):function shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*):(.text+0x4ec): error: undefined reference to 'spvtools::Optimizer::Run(unsigned int const*, unsigned long, std::vector<unsigned int, std::allocator<unsigned int> >*, spv_optimizer_options_t*) const'
/usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):function shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*):(.text+0x5a6): error: undefined reference to 'spvtools::Optimizer::~Optimizer()'
/usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):function shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*):(.text+0x5b1): error: undefined reference to 'spvValidatorOptionsDestroy'
/usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):function shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*):(.text+0x5e5): error: undefined reference to 'spvtools::Optimizer::RegisterPerformancePasses()'
/usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):function shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*):(.text+0x5f5): error: undefined reference to 'spvtools::Optimizer::RegisterLegalizationPasses()'
/usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):function shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*):(.text+0x60a): error: undefined reference to 'spvtools::CreateStripDebugInfoPass()'
/usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):function shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*):(.text+0x616): error: undefined reference to 'spvtools::Optimizer::RegisterPass(spvtools::Optimizer::PassToken&&)'
/usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):function shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*):(.text+0x625): error: undefined reference to 'spvtools::Optimizer::RegisterSizePasses()'
/usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):function shaderc_util::SpirvToolsDisassemble(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<unsigned int, std::allocator<unsigned int> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*):(.text+0xa39): error: undefined reference to 'spvtools::SpirvTools::SpirvTools(spv_target_env)'
/usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):function shaderc_util::SpirvToolsDisassemble(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<unsigned int, std::allocator<unsigned int> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*):(.text+0xb9d): error: undefined reference to 'spvtools::SpirvTools::SetMessageConsumer(std::function<void (spv_message_level_t, char const*, spv_position_t const&, char const*)>)'
/usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):function shaderc_util::SpirvToolsDisassemble(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<unsigned int, std::allocator<unsigned int> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*):(.text+0xbc8): error: undefined reference to 'spvtools::SpirvTools::Disassemble(std::vector<unsigned int, std::allocator<unsigned int> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned int) const'
/usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):function shaderc_util::SpirvToolsDisassemble(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<unsigned int, std::allocator<unsigned int> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*):(.text+0xdb0): error: undefined reference to 'spvtools::SpirvTools::~SpirvTools()'
/usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):function shaderc_util::SpirvToolsAssemble(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, shaderc_util::string_piece, spv_binary_t**, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*):(.text+0xfe9): error: undefined reference to 'spvContextCreate'
/usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):function shaderc_util::SpirvToolsAssemble(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, shaderc_util::string_piece, spv_binary_t**, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*):(.text+0x1027): error: undefined reference to 'spvTextToBinary'
/usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):function shaderc_util::SpirvToolsAssemble(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, shaderc_util::string_piece, spv_binary_t**, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*):(.text+0x13b7): error: undefined reference to 'spvDiagnosticDestroy'
/usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):function shaderc_util::SpirvToolsAssemble(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, shaderc_util::string_piece, spv_binary_t**, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*):(.text+0x13c0): error: undefined reference to 'spvContextDestroy'
/usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):function shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [clone .cold]:(.text.unlikely+0xa3): error: undefined reference to 'spvtools::Optimizer::~Optimizer()'
/usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):function shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [clone .cold]:(.text.unlikely+0xae): error: undefined reference to 'spvValidatorOptionsDestroy'
/usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):function shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [clone .cold]:(.text.unlikely+0x10f): error: undefined reference to 'spvtools::Optimizer::PassToken::~PassToken()'
/usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):function shaderc_util::SpirvToolsDisassemble(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<unsigned int, std::allocator<unsigned int> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [clone .cold]:(.text.unlikely+0x12c): error: undefined reference to 'spvtools::SpirvTools::~SpirvTools()'
/usr/lib/libshaderc_combined.a(compiler.cc.o):function shaderc_util::GlslangInitializer::GlslangInitializer():(.text+0x195): error: undefined reference to 'glslang::InitializeProcess()'
/usr/lib/libshaderc_combined.a(compiler.cc.o):function shaderc_util::GlslangInitializer::~GlslangInitializer():(.text+0x242): error: undefined reference to 'glslang::FinalizeProcess()'
/usr/lib/libshaderc_combined.a(compiler.cc.o):function shaderc_util::Compiler::PreprocessShader(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, shaderc_util::string_piece const&, shaderc_util::string_piece const&, shaderc_util::CountingIncluder&) const:(.text+0x71af): error: undefined reference to 'glslang::TShader::TShader(EShLanguage)'
/usr/lib/libshaderc_combined.a(compiler.cc.o):function shaderc_util::Compiler::PreprocessShader(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, shaderc_util::string_piece const&, shaderc_util::string_piece const&, shaderc_util::CountingIncluder&) const:(.text+0x71fb): error: undefined reference to 'glslang::TShader::setStringsWithLengthsAndNames(char const* const*, int const*, char const* const*, int)'
/usr/lib/libshaderc_combined.a(compiler.cc.o):function shaderc_util::Compiler::PreprocessShader(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, shaderc_util::string_piece const&, shaderc_util::string_piece const&, shaderc_util::CountingIncluder&) const:(.text+0x725e): error: undefined reference to 'glslang::TShader::setInvertY(bool)'
/usr/lib/libshaderc_combined.a(compiler.cc.o):function shaderc_util::Compiler::PreprocessShader(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, shaderc_util::string_piece const&, shaderc_util::string_piece const&, shaderc_util::CountingIncluder&) const:(.text+0x726e): error: undefined reference to 'glslang::TShader::setNanMinMaxClamp(bool)'
/usr/lib/libshaderc_combined.a(compiler.cc.o):function shaderc_util::Compiler::PreprocessShader(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, shaderc_util::string_piece const&, shaderc_util::string_piece const&, shaderc_util::CountingIncluder&) const:(.text+0x7328): error: undefined reference to 'glslang::TShader::preprocess(TBuiltInResource const*, int, EProfile, bool, bool, EShMessages, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, glslang::TShader::Includer&)'
/usr/lib/libshaderc_combined.a(compiler.cc.o):function shaderc_util::Compiler::PreprocessShader(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, shaderc_util::string_piece const&, shaderc_util::string_piece const&, shaderc_util::CountingIncluder&) const:(.text+0x733d): error: undefined reference to 'glslang::TShader::getInfoLog()'
/usr/lib/libshaderc_combined.a(compiler.cc.o):function shaderc_util::Compiler::PreprocessShader(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, shaderc_util::string_piece const&, shaderc_util::string_piece const&, shaderc_util::CountingIncluder&) const:(.text+0x7443): error: undefined reference to 'glslang::TShader::~TShader()'
/usr/lib/libshaderc_combined.a(compiler.cc.o):function shaderc_util::Compiler::PreprocessShader(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, shaderc_util::string_piece const&, shaderc_util::string_piece const&, shaderc_util::CountingIncluder&) const:(.text+0x7492): error: undefined reference to 'glslang::TShader::getInfoLog()'
/usr/lib/libshaderc_combined.a(compiler.cc.o):function shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const:(.text+0x808b): error: undefined reference to 'glslang::TShader::TShader(EShLanguage)'
/usr/lib/libshaderc_combined.a(compiler.cc.o):function shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const:(.text+0x80de): error: undefined reference to 'glslang::TShader::setStringsWithLengthsAndNames(char const* const*, int const*, char const* const*, int)'
/usr/lib/libshaderc_combined.a(compiler.cc.o):function shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const:(.text+0x80fc): error: undefined reference to 'glslang::TShader::setEntryPoint(char const*)'
/usr/lib/libshaderc_combined.a(compiler.cc.o):function shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const:(.text+0x8114): error: undefined reference to 'glslang::TShader::setAutoMapBindings(bool)'
/usr/lib/libshaderc_combined.a(compiler.cc.o):function shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const:(.text+0x812c): error: undefined reference to 'glslang::TShader::setTextureSamplerTransformMode(EShTextureSamplerTransformMode)'
/usr/lib/libshaderc_combined.a(compiler.cc.o):function shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const:(.text+0x814b): error: undefined reference to 'glslang::TShader::setAutoMapLocations(bool)'
/usr/lib/libshaderc_combined.a(compiler.cc.o):function shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const:(.text+0x8167): error: undefined reference to 'glslang::TShader::setShiftImageBinding(unsigned int)'
/usr/lib/libshaderc_combined.a(compiler.cc.o):function shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const:(.text+0x817c): error: undefined reference to 'glslang::TShader::setShiftSamplerBinding(unsigned int)'
/usr/lib/libshaderc_combined.a(compiler.cc.o):function shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const:(.text+0x8191): error: undefined reference to 'glslang::TShader::setShiftTextureBinding(unsigned int)'
/usr/lib/libshaderc_combined.a(compiler.cc.o):function shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const:(.text+0x81a6): error: undefined reference to 'glslang::TShader::setShiftUboBinding(unsigned int)'
/usr/lib/libshaderc_combined.a(compiler.cc.o):function shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const:(.text+0x81bb): error: undefined reference to 'glslang::TShader::setShiftSsboBinding(unsigned int)'
/usr/lib/libshaderc_combined.a(compiler.cc.o):function shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const:(.text+0x81d0): error: undefined reference to 'glslang::TShader::setShiftUavBinding(unsigned int)'
/usr/lib/libshaderc_combined.a(compiler.cc.o):function shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const:(.text+0x81e1): error: undefined reference to 'glslang::TShader::setHlslIoMapping(bool)'
/usr/lib/libshaderc_combined.a(compiler.cc.o):function shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const:(.text+0x81f6): error: undefined reference to 'glslang::TShader::setResourceSetBinding(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)'
/usr/lib/libshaderc_combined.a(compiler.cc.o):function shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const:(.text+0x8235): error: undefined reference to 'glslang::TShader::setInvertY(bool)'
/usr/lib/libshaderc_combined.a(compiler.cc.o):function shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const:(.text+0x8246): error: undefined reference to 'glslang::TShader::setNanMinMaxClamp(bool)'
/usr/lib/libshaderc_combined.a(compiler.cc.o):function shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const:(.text+0x82f0): error: undefined reference to 'glslang::TShader::parse(TBuiltInResource const*, int, EProfile, bool, bool, EShMessages, glslang::TShader::Includer&)'
/usr/lib/libshaderc_combined.a(compiler.cc.o):function shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const:(.text+0x8300): error: undefined reference to 'glslang::TShader::getInfoLog()'
/usr/lib/libshaderc_combined.a(compiler.cc.o):function shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const:(.text+0x838e): error: undefined reference to 'glslang::TProgram::TProgram()'
/usr/lib/libshaderc_combined.a(compiler.cc.o):function shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const:(.text+0x83d1): error: undefined reference to 'glslang::TProgram::link(EShMessages)'
/usr/lib/libshaderc_combined.a(compiler.cc.o):function shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const:(.text+0x83e9): error: undefined reference to 'glslang::TProgram::getInfoLog()'
/usr/lib/libshaderc_combined.a(compiler.cc.o):function shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const:(.text+0x84af): error: undefined reference to 'glslang::GlslangToSpv(glslang::TIntermediate const&, std::vector<unsigned int, std::allocator<unsigned int> >&, glslang::SpvOptions*)'
/usr/lib/libshaderc_combined.a(compiler.cc.o):function shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const:(.text+0x854e): error: undefined reference to 'glslang::TProgram::~TProgram()'
/usr/lib/libshaderc_combined.a(compiler.cc.o):function shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const:(.text+0x855b): error: undefined reference to 'glslang::TShader::~TShader()'
/usr/lib/libshaderc_combined.a(compiler.cc.o):function shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const:(.text+0x8ed4): error: undefined reference to 'spvOptimizerOptionsCreate'
/usr/lib/libshaderc_combined.a(compiler.cc.o):function shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const:(.text+0x8ef2): error: undefined reference to 'spvOptimizerOptionsSetPreserveBindings'
/usr/lib/libshaderc_combined.a(compiler.cc.o):function shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const:(.text+0x8fa8): error: undefined reference to 'spvOptimizerOptionsDestroy'
/usr/lib/libshaderc_combined.a(compiler.cc.o):function shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const:(.text+0x90fc): error: undefined reference to 'glslang::TProgram::mapIO(glslang::TIoMapResolver*, glslang::TIoMapper*)'
/usr/lib/libshaderc_combined.a(compiler.cc.o):function shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const:(.text+0x91ee): error: undefined reference to 'spvOptimizerOptionsDestroy'
/usr/lib/libshaderc_combined.a(compiler.cc.o):function shaderc_util::Compiler::PreprocessShader(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, shaderc_util::string_piece const&, shaderc_util::string_piece const&, shaderc_util::CountingIncluder&) const [clone .cold]:(.text.unlikely+0x57e): error: undefined reference to 'glslang::TShader::~TShader()'
/usr/lib/libshaderc_combined.a(compiler.cc.o):function shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const [clone .cold]:(.text.unlikely+0x6a9): error: undefined reference to 'spvOptimizerOptionsDestroy'
/usr/lib/libshaderc_combined.a(compiler.cc.o):function shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const [clone .cold]:(.text.unlikely+0x6c2): error: undefined reference to 'glslang::TProgram::~TProgram()'
/usr/lib/libshaderc_combined.a(compiler.cc.o):function shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const [clone .cold]:(.text.unlikely+0x6cf): error: undefined reference to 'glslang::TShader::~TShader()'
collect2: error: ld returned 1 exit status
make[2]: *** [source/creator/CMakeFiles/blender.dir/build.make:468: bin/blender] Error 1
make[1]: *** [CMakeFiles/Makefile2:8442: source/creator/CMakeFiles/blender.dir/all] Error 2
make: *** [Makefile:166: all] Error 2
make: Leaving directory '/build/blender-git/src/blender/build'

