mold: error: undefined symbol: glslang::TShader::setShiftUavBinding(unsigned int)
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
mold: error: undefined symbol: spvOptimizerOptionsDestroy
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text.unlikely)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const [clone .cold])
mold: error: undefined symbol: spvtools::Optimizer::Run(unsigned int const*, unsigned long, std::vector<unsigned int, std::allocator<unsigned int> >*, spv_optimizer_options_t*) const
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))
mold: error: undefined symbol: spvtools::SpirvTools::SetMessageConsumer(std::function<void (spv_message_level_t, char const*, spv_position_t const&, char const*)>)
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsDisassemble(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<unsigned int, std::allocator<unsigned int> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))
mold: error: undefined symbol: glslang::TShader::setShiftSsboBinding(unsigned int)
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
mold: error: undefined symbol: glslang::TShader::setShiftTextureBinding(unsigned int)
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
mold: error: undefined symbol: glslang::GlslangToSpv(glslang::TIntermediate const&, std::vector<unsigned int, std::allocator<unsigned int> >&, glslang::SpvOptions*)
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
mold: error: undefined symbol: glslang::TProgram::link(EShMessages)
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
mold: error: undefined symbol: glslang::TShader::setShiftImageBinding(unsigned int)
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
mold: error: undefined symbol: glslang::TProgram::getInfoLog()
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
mold: error: undefined symbol: spvtools::Optimizer::RegisterLegalizationPasses()
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))
mold: error: undefined symbol: spvtools::Optimizer::RegisterPass(spvtools::Optimizer::PassToken&&)
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))
mold: error: undefined symbol: glslang::TShader::setNanMinMaxClamp(bool)
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::PreprocessShader(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, shaderc_util::string_piece const&, shaderc_util::string_piece const&, shaderc_util::CountingIncluder&) const)>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
mold: error: undefined symbol: spvBinaryDestroy
>>> referenced by /usr/lib/libshaderc_combined.a(shaderc.cc.o):(.text._ZN37shaderc_compilation_result_spv_binaryD2Ev)
>>>               /usr/lib/libshaderc_combined.a(shaderc.cc.o):(shaderc_compilation_result_spv_binary::~shaderc_compilation_result_spv_binary())>>> referenced by /usr/lib/libshaderc_combined.a(shaderc.cc.o):(.text._ZN37shaderc_compilation_result_spv_binaryD0Ev)
>>>               /usr/lib/libshaderc_combined.a(shaderc.cc.o):(shaderc_compilation_result_spv_binary::~shaderc_compilation_result_spv_binary())
mold: error: undefined symbol: glslang::TShader::setInvertY(bool)
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::PreprocessShader(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, shaderc_util::string_piece const&, shaderc_util::string_piece const&, shaderc_util::CountingIncluder&) const)>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
mold: error: undefined symbol: glslang::InitializeProcess()
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::GlslangInitializer::GlslangInitializer())
mold: error: undefined symbol: spvtools::Optimizer::PassToken::~PassToken()
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text.unlikely)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [clone .cold])
mold: error: undefined symbol: glslang::TShader::setEntryPoint(char const*)
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
mold: error: undefined symbol: spvValidatorOptionsSetBeforeHlslLegalization
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))
mold: error: undefined symbol: spvOptimizerOptionsCreate
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
mold: error: undefined symbol: glslang::TShader::setTextureSamplerTransformMode(EShTextureSamplerTransformMode)
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
mold: error: undefined symbol: glslang::TShader::preprocess(TBuiltInResource const*, int, EProfile, bool, bool, EShMessages, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, glslang::TShader::Includer&)
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::PreprocessShader(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, shaderc_util::string_piece const&, shaderc_util::string_piece const&, shaderc_util::CountingIncluder&) const)
mold: error: undefined symbol: glslang::TShader::setShiftSamplerBinding(unsigned int)
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
mold: error: undefined symbol: spvtools::SpirvTools::SpirvTools(spv_target_env)
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsDisassemble(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<unsigned int, std::allocator<unsigned int> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))
mold: error: undefined symbol: glslang::FinalizeProcess()
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::GlslangInitializer::~GlslangInitializer())
mold: error: undefined symbol: spvtools::Optimizer::~Optimizer()
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text.unlikely)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [clone .cold])
mold: error: undefined symbol: glslang::TShader::parse(TBuiltInResource const*, int, EProfile, bool, bool, EShMessages, glslang::TShader::Includer&)
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
mold: error: undefined symbol: spvDiagnosticDestroy
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsAssemble(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, shaderc_util::string_piece, spv_binary_t**, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))
mold: error: undefined symbol: glslang::TShader::getInfoLog()
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::PreprocessShader(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, shaderc_util::string_piece const&, shaderc_util::string_piece const&, shaderc_util::CountingIncluder&) const)>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::PreprocessShader(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, shaderc_util::string_piece const&, shaderc_util::string_piece const&, shaderc_util::CountingIncluder&) const)>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
mold: error: undefined symbol: glslang::TProgram::TProgram()
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
mold: error: undefined symbol: spvtools::Optimizer::Optimizer(spv_target_env)
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))
mold: error: undefined symbol: glslang::TProgram::mapIO(glslang::TIoMapResolver*, glslang::TIoMapper*)
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
mold: error: undefined symbol: spvtools::SpirvTools::Disassemble(std::vector<unsigned int, std::allocator<unsigned int> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned int) const
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsDisassemble(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<unsigned int, std::allocator<unsigned int> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))
mold: error: undefined symbol: spvContextCreate
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsAssemble(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, shaderc_util::string_piece, spv_binary_t**, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))
mold: error: undefined symbol: glslang::TShader::setStringsWithLengthsAndNames(char const* const*, int const*, char const* const*, int)
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::PreprocessShader(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, shaderc_util::string_piece const&, shaderc_util::string_piece const&, shaderc_util::CountingIncluder&) const)>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
mold: error: undefined symbol: spvValidatorOptionsDestroy
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text.unlikely)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [clone .cold])
mold: error: undefined symbol: glslang::TProgram::~TProgram()
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text.unlikely)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const [clone .cold])
mold: error: undefined symbol: spvtools::Optimizer::RegisterPerformancePasses()
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))
mold: error: undefined symbol: glslang::TShader::~TShader()
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::PreprocessShader(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, shaderc_util::string_piece const&, shaderc_util::string_piece const&, shaderc_util::CountingIncluder&) const)>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text.unlikely)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::PreprocessShader(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, shaderc_util::string_piece const&, shaderc_util::string_piece const&, shaderc_util::CountingIncluder&) const [clone .cold])>>> referenced 1 more times

mold: error: undefined symbol: spvValidatorOptionsSetSkipBlockLayout
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))
mold: error: undefined symbol: spvContextDestroy
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsAssemble(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, shaderc_util::string_piece, spv_binary_t**, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))
mold: error: undefined symbol: spvOptimizerOptionsSetPreserveBindings
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
mold: error: undefined symbol: spvTextToBinary
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsAssemble(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, shaderc_util::string_piece, spv_binary_t**, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))
mold: error: undefined symbol: glslang::TShader::setAutoMapBindings(bool)
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
mold: error: undefined symbol: spvOptimizerOptionsSetValidatorOptions
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))
mold: error: undefined symbol: glslang::TShader::setResourceSetBinding(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
mold: error: undefined symbol: spvValidatorOptionsSetRelaxLogicalPointer
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))
mold: error: undefined symbol: glslang::TShader::TShader(EShLanguage)
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::PreprocessShader(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, shaderc_util::string_piece const&, shaderc_util::string_piece const&, shaderc_util::CountingIncluder&) const)>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
mold: error: undefined symbol: spvtools::CreateStripDebugInfoPass()
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))
mold: error: undefined symbol: spvtools::Optimizer::SetMessageConsumer(std::function<void (spv_message_level_t, char const*, spv_position_t const&, char const*)>)
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))
mold: error: undefined symbol: glslang::TShader::setAutoMapLocations(bool)
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
mold: error: undefined symbol: spvtools::SpirvTools::~SpirvTools()
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsDisassemble(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<unsigned int, std::allocator<unsigned int> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text.unlikely)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsDisassemble(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<unsigned int, std::allocator<unsigned int> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [clone .cold])
mold: error: undefined symbol: spvtools::Optimizer::RegisterSizePasses()
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))
mold: error: undefined symbol: spvValidatorOptionsCreate
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))
mold: error: undefined symbol: spvOptimizerOptionsSetRunValidator
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))
mold: error: undefined symbol: glslang::TShader::setHlslIoMapping(bool)
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
mold: error: undefined symbol: spvtools::CreateCompactIdsPass()
>>> referenced by /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(spirv_tools_wrapper.cc.o):(shaderc_util::SpirvToolsOptimize(shaderc_util::Compiler::TargetEnv, shaderc_util::Compiler::TargetEnvVersion, std::vector<shaderc_util::PassId, std::allocator<shaderc_util::PassId> > const&, spvtools::OptimizerOptions&, std::vector<unsigned int, std::allocator<unsigned int> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*))
mold: error: undefined symbol: glslang::TShader::setShiftUboBinding(unsigned int)
>>> referenced by /usr/lib/libshaderc_combined.a(compiler.cc.o):(.text)
>>>               /usr/lib/libshaderc_combined.a(compiler.cc.o):(shaderc_util::Compiler::Compile(shaderc_util::string_piece const&, EShLanguage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::function<EShLanguage (std::ostream*, shaderc_util::string_piece const&)> const&, shaderc_util::CountingIncluder&, shaderc_util::Compiler::OutputType, std::ostream*, unsigned long*, unsigned long*) const)
collect2: error: ld returned 1 exit status
make[2]: *** [source/creator/CMakeFiles/blender.dir/build.make:468: bin/blender] Error 1
make[1]: *** [CMakeFiles/Makefile2:8442: source/creator/CMakeFiles/blender.dir/all] Error 2
make: *** [Makefile:166: all] Error 2
make: Leaving directory '/build/blender-git/src/blender/build'
