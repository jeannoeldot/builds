# Le répertoire
===============
!!! EN USER
cd $HOME/05-builds/blender-git


1-1) ATTENTION A LA DATE DE MAJ SUR LE SITE
======================================================

http://git.blender.org/gitweb/gitweb.cgi/blender.git

==> last change    Sat, 14 Jan 2017 03:34:51 +0100 (00:34 -0200)
==> 20170114


1.2 REVISION
==============
http://git.blender.org/gitweb/gitweb.cgi/blender.git/shortlog


1.3 SOURCES
==============
!!! Répertoire clone de blender dans : /0-DataLinux/05-builds-dir-git/blender
------------------------------------------------------------------------------

cd /0-DataLinux/05-builds-dir-git

Vérifier existence rep blender :
--------------------------------
ls

!!! SI REP blender N'EXISTE PAS
-------------------------------
git clone http://git.blender.org/blender.git
cd blender
git submodule update --init --recursive
git submodule foreach git checkout master
git submodule foreach git pull --rebase origin master
cd ..

!!! SI REP blender EXISTE
-------------------------
cd blender
git pull --rebase
git submodule foreach git pull --rebase origin master
cd ..

!!!!! Vérifier VERSION : 
$ head -n 45 blender/source/blender/blenkernel/BKE_blender_version.h
 ==> #define BLENDER_VERSION                 278
 ==> #define BLENDER_SUBVERSION              4
 
 ==> #define BLENDER_VERSION_CHAR
 
 ==> #define BLENDER_VERSION_CYCLE   alpha
 
==> Version = 2.78.4.20170114

!!! SI CHANGEMENT DE VERSION (ex de 2.77 à 2.78)
!!! EN ROOT
==> DESINSTALLER blender-addons-yafaray-git
==> # pacman -R blender-addons-yafaray-git
==> DESINSTALLER blender-addons-matlib-git
==> # pacman -R blender-addons-matlib-git

==> Modifier blender.install

1-7) FAIRE ARCHIVE TAR.GZ
=================================

tar -cvzf blender-git-2.78.4.20170114.tar.gz --exclude=.git blender

1-7-1) Move ARCHIVE TAR.GZ ds rep compile
==========================================
cd $HOME/05-builds/blender-git

!!! CONSERVE VERSION DANS 05-builds-dir-git
-------------------------------------------
cp -v /0-DataLinux/05-builds-dir-git/blender-git-2.78.4.20170114.tar.gz .
sync

1-8) FAIRE PATCH
===============================
voir CmdFairePatches.TXT


1-9) MODIFIER blender.install
=================================

!!! Version = 2.78
!!! LE 01/05/2016 : MODIFS SUITE HOOKS PACMAN

2-1) MODIFIER LE PKGBUILD
========================
# Maintainer: Jean-Noel Dot <jean.noel.dot AT sfr DOT fr>

pkgname=blender-git
!!!!!!
pkgver=2.78.4.20170114
pkgrel=1
pkgrel=2      # TEST openvdb-git 4.0.1.20170113
pkgrel=3      # TEST openvdb-git 4.0.1.20170113 CXXFLAGS+=' -DOPENVDB_3_ABI_COMPATIBLE'

pkgrel=2          # rebuild boost boost-libs 1.63.0-1

---------------------------------------------------------------------------
!!! OK DANS CHROOT
!!! -------------------------------------------------------

depends=('desktop-file-utils' 'hicolor-icon-theme' 'shared-mime-info' 'xdg-utils'
          ...
         ...
         'jemalloc'
         'opencolorio'
!!!!!!
         'opencollada-git' 'openshadinglanguage-git' 'openimageio-git'
!!!!!!
         'opensubdiv-git'
!!!!!!
         'openvdb-git'
)

!!!!!!
makedepends=('cmake' 'boost' 'mesa' 'llvm35'
             'cuda'
)
!!!!!!
VOIR RAJOUT DE opencl-headers
makedepends=('cmake' 'boost' 'mesa' 'llvm35'
             'cuda'
             'opencl-headers'
!!! POUR BUILDINFO
             'git'
)

!!!!!!
_gitname="blender"

SANS PATCH
----------
source=("$pkgname-$pkgver.tar.gz"
)

sha256sum blender-git-2.78.4.20170114.tar.gz

sha256sums=(...
         ...
)

# OPENVDB : SI VERSION >= 4
------------------------------------
build() {
  ...
  CXXFLAGS+=' -DOPENVDB_3_ABI_COMPATIBLE'
  ...

# LLVM : VOIR PKGBUILD sur COMMUNITY
------------------------------------
        -DWITH_LLVM=ON \
        -DLLVM_VERSION=3.5 \
        
CMake Warning:
  Manually-specified variables were not used by the project:

    LLVM_VERSION

        -DLLVM_STATIC=OFF \ ==> -DLLVM_STATIC=ON

# PYTHON : VOIR PKGBUILD sur COMMUNITY
--------------------------------------
/!\ /!\ SUITE MAJ PYTHON 3.6
        ERREUR COMPIL : 
  Could NOT find PythonLibsUnix (missing: PYTHON_LIBRARY PYTHON_LIBPATH
  PYTHON_INCLUDE_DIR PYTHON_INCLUDE_CONFIG_DIR)

!!! VÉRIFIER VERSION PYTHON INSTALLÉE
$ pacman -Ss python | grep 3 | grep install
==> extra/python 3.6.0-1 [installé]

    -DPYTHON_VERSION=3.6 \
    -DPYTHON_LIBPATH=/usr/lib \
    -DPYTHON_LIBRARY=python3.6m \
    -DPYTHON_INCLUDE_DIRS=/usr/include/python3.6m \


2-2) VERIFIER CMakeLists.txt
==========================
  kwrite /0-DataLinux/05-builds-dir-git/blender/CMakeLists.txt &

Lignes 170 et ...
# customize...
if(UNIX AND NOT APPLE)
        # some of these libraries are problematic on Linux
        # disable less important dependencies by default
        set(_init_CODEC_FFMPEG                   OFF)   ==> ON
        set(_init_CYCLES_OSL                     OFF)   ==> ON
	set(_init_CYCLES_OPENSUBDIV              OFF)   ==> ON
        set(_init_IMAGE_OPENEXR                  OFF)   ==> ON
        set(_init_JACK                           OFF)
        set(_init_OPENCOLLADA                    OFF)   ==> ON
        set(_init_OPENCOLORIO                    OFF)   ==> ON
        set(_init_SDL                            OFF)   ==> ON
        set(_init_FFTW3                          OFF)   ==> ON
        set(_init_OPENSUBDIV                     OFF)   ==> ON
endif()

# Blender internal features
218 option(WITH_BUILDINFO   ==> ON   si ON makedepends = git

232 option(WITH_FFTW3   ==> ON

236 option(WITH_GAMEENGINE   ==> OFF

243 option(WITH_OPENCOLORIO   ==> ON

# Compositor
248 option(WITH_OPENSUBDIV   ==> ON   si ON dep = opensubdiv-git
250 option(WITH_OPENVDB   ==> ON   si ON dep = openvdb-git
251 option(WITH_OPENVDB_BLOSC   ==> ON

300 WITH_SYSTEM_OPENJPEG      ==> ON

302     !!! VOIR
if(UNIX AND NOT APPLE)
	option(WITH_SYSTEM_EIGEN3 "Use the systems Eigen3 library" OFF)
endif()


# Modifiers
312 option WITH_MOD_CLOTH_ELTOPO    NON : disabled
314 option WITH_MOD_OCEANSIM	==> ON

# Image format support
318 option(WITH_IMAGE_OPENEXR	==> ON

324 option WITH_IMAGE_FRAMESERVER    ==> OFF

# Audio/Video format support
328	option WITH_CODEC_FFMPEG	==> ON
329	option WITH_CODEC_SNDFILE	==> ON

Lignes 331 et ...
# Alembic support
option(WITH_ALEMBIC             "Enable Alembic Support" OFF)
option(WITH_ALEMBIC_HDF5        "Enable Legacy Alembic Support (not officially supported)" OFF)

Lignes 341
# 3D format support
option WITH_OPENCOLLADA		ON 	    si ON dep = opencollada-git

# Sound output
344   option(WITH_SDL   	==> ON
346   option WITH_JACK          ==> OFF         si ON  dep =  jack

# Compression

# Camera/motion tracking

# Freestyle

# Misc
373	option WITH_INPUT_NDOF		==> OFF


376	WITH_INSTALL_PORTABLE       ON   ==> OFF

384     WITH_PYTHON_INSTALL             ON   ==> OFF

386     WITH_PYTHON_INSTALL_NUMPY       ON   ==> OFF

391     WITH_PYTHON_INSTALL_REQUESTS       ON   ==> OFF

        

400 # Cycles
option WITH_CYCLES			ON     si ON dep = openimageio
option WITH_CYCLES_OSL                  ==> ON dep = openshadinglanguage
option(WITH_CYCLES_OPENSUBDIV		==> ON dep = opensubdiv
option WITH_CYCLES_CUDA_BINARIES	==> ON dep = cuda
        
URL  GPU et sm_??  : https://developer.nvidia.com/cuda-gpus
https://developer.nvidia.com/cuda-gpus#collapse4

exemple :  GeForce GTX 980    5.2
  -DCYCLES_CUDA_ARCH=sm_52    -DCYCLES_CUDA_BINARIES_ARCH=sm_52

Lignes 410 ????
option(WITH_CYCLES_LOGGING              ON   ==> OFF
        
!!! A VOIR ???
412 WITH_CYCLES_NATIVE_ONLY	"Build Cycles with native kernel only (which fits current CPU, use for development only)" OFF)
   	==> ON ???

!!! A VOIR ???
417   WITH_CUDA_DYNLOAD     ON


420 # LLVM
option(WITH_LLVM   	==> ON
option(LLVM_STATIC   	==> ON


# Documentation
Lignes 451 et ...
if(UNIX AND NOT APPLE)
        option(WITH_DOC_MANPAGE "Create a manual page (Unix manpage)" OFF)    ==> ON
endif()


# OpenGL
# OpenGL : VOIR sortie cmd $ glxinfo | grep OpenGL
---------------------------------------------------
Lignes 287 et ...
        option(WITH_SYSTEM_GLEW         ==> ON
        option(WITH_SYSTEM_GLES         ==> ON

Lignes 456 et ...
INCHANGÉS :
------------
error: VOIR : 00-Erreur-Compile-WITH_GL_PROFILE_CORE-ON.TXT

option(WITH_GL_PROFILE_COMPAT         ON   ==> OFF
OpenGL core profile version string: 4.5.0 NVIDIA 367.27
        option(WITH_GL_PROFILE_CORE         OFF  ==> ON
OpenGL ES profile version string: OpenGL ES 3.2 NVIDIA 367.27
        option(WITH_GL_PROFILE_ES20         OFF  ==> ON
        
TESTS DANS PKGBUILD
        -DWITH_GL_PROFILE_COMPAT=OFF \
        -DWITH_GL_PROFILE_CORE=ON \


# Experimental support of C++11
Lignes 495 et ...
506 option(WITH_C11 "Build with C11 standard enabled, for development use only!" OFF)
==> ON  : -DWITH_C11=ON \ 

508 option(WITH_CXX11 "Build with C++11 standard enabled, for development use only!" OFF)
==> ON  : -DWITH_CXX11=ON \ 

# Compiler toolchain

# Dependency graph


=================================================================

!!!!!!!!!!
!!! SI MODIFS ==> MODIFIER blender.install
==========================================

3-1) MAKEPKG TMPFS en CHROOT EN USER
====================================
!!! ATTENTION : ATTRIBUTS FICHIERS
==================================
$ ls -la
==> 
-rw-r--r--  1 jnd users     3130 10 sept. 20:02 PKGBUILD
-rw-r--r--  1 jnd users 58014686  9 sept. 19:49 blender-git-2.78.4.20170114.tar.gz
-rw-r--r--  1 jnd users      783 17 août  08:16 blender.install

!!! A MODIFIER SI PAS OK !
===============================

3-1) MAKEPKG TMPFS en CHROOT EN USER
====================================
!!! EN USER

# OPENVDB : SI VERSION >= 4
------------------------------------
!!! A FAIRE !!!
===============
cp -v $HOME/05-builds/0-copie-fichiers-chroot/makepkg.conf.fast \
$HOME/05-builds/0-copie-fichiers-chroot/makepkg.conf.fast.original

cp -v $HOME/05-builds/0-copie-fichiers-chroot/makepkg.conf.fast.blenderovdb4 \
$HOME/05-builds/0-copie-fichiers-chroot/makepkg.conf.fast


$ mkpkg-chroot-repo

SI depends=( 'openshadinglanguage-git' 'openimageio-git')
==========================================================
$ cp -v $HOME/00-repolocal/openshadinglanguage-git-*-x86_64.pkg.tar.* \
/tmp/chrootrepo/

$ cp -v $HOME/00-repolocal/openimageio-git-*-x86_64.pkg.tar.* \
/tmp/chrootrepo/

SI depends=( 'opencollada-git' )
==========================================================
$ cp -v $HOME/00-repolocal/opencollada-git-*-x86_64.pkg.tar.* \
/tmp/chrootrepo/

SI depends=( 'opensubdiv-git' )
==========================================================
$ cp -v $HOME/00-repolocal/opensubdiv-git-*-x86_64.pkg.tar.* \
/tmp/chrootrepo/

SI depends=( 'openvdb-git' )
==========================================================
# OPENVDB : SI VERSION = 3
---------------------------
$ cp -v $HOME/00-repolocal/openvdb-git-*-x86_64.pkg.tar.* \
/tmp/chrootrepo/
# TEST : OPENVDB : SI VERSION >= 4
----------------------------------
$ cp -v /0-DataLinux/00-repolocal/openvdb-git-4.0.1.20170113-1-x86_64.pkg.tar.xz \
/tmp/chrootrepo/


-------------------------------------------------------------------
!!! GCC 5.3 ET FAST => OK SI LIGNE SED COMMENTÉE
!!! GCC 5.3 ET FAST => ERREUR : INTERNAL COMPILER ERROR SI LIGNE SED DÉCOMMENTÉE
  FAST
-------
$ rm -f *~
$ $HOME/bin/mkpkg-tmpfs -m fast -g 16G
OU
$ rm -f *~
$ $HOME/bin/mkpkg-tmpfs -m fast -g 16G -l logs

$ rm -f *~
$ mkpkg-tmpfs -m fast -g 16G
OU
$ rm -f *~
$ mkpkg-tmpfs -m fast -g 16G -l logs
-------------------------------------------------------------------
  NATIVE
--------
$ rm -f *~
$ $HOME/bin/mkpkg-tmpfs -m native -g 16G
OU
$ rm -f *~
$ $HOME/bin/mkpkg-tmpfs -m native -g 16G -l logs

$ rm -f *~
$ mkpkg-tmpfs -m native -g 16G
OU
$ rm -f *~
$ mkpkg-tmpfs -m native -g 16G -l logs
-------------------------------------------------------------------

==> Installing missing dependencies...
resolving dependencies...
:: There are 3 providers available for libgl:
:: Repository extra
   1) mesa-libgl  2) nvidia-304xx-libgl  3) nvidia-libgl

Enter a number (default=1): 
-------------------------------------------------------------------


$ rm -rf /tmp/chrootrepo

# OPENVDB : SI VERSION >= 4
------------------------------------
!!! A FAIRE !!!
===============
cp -v $HOME/05-builds/0-copie-fichiers-chroot/makepkg.conf.fast.original \
$HOME/05-builds/0-copie-fichiers-chroot/makepkg.conf.fast



3-2) MAKEPKG en USER sur SSD
=============================
!!! EN USER
cd $HOME/05-builds/blender-git
$ rm -f *~

makepkg -s

makepkg -f

# Nettoyage...
!!! EN USER
rm -rf pkg src
rm -f *~

# Verifications...

namcap blender-git-*-x86_64.pkg.tar.*

# SUPPRIME ET REMPLACE LE PRÉCÉDENT DANS /0-DataLinux/00-repolocal/
-------------------------------------------------------------------
$ rm /0-DataLinux/00-repolocal/blender-git-*-x86_64.pkg.tar.*

$ cp -v blender-git-*-x86_64.pkg.tar.* /0-DataLinux/00-repolocal/

# DÉPLACE ET REMPLACE LE PRÉCÉDENT DANS  $HOME/00-repolocal
---------------------------------------------------------------
$ mv -v $HOME/00-repolocal/blender-git-*-x86_64.pkg.tar.* \
$HOME/00-repolocal/pkg-OLD/

$ mv -v blender-git-*-x86_64.pkg.tar.* $HOME/00-repolocal/


# SUPPRIME FICHIERS *~ ET FICHIER GIT SOURCE
--------------------------------------------
$ rm -f *~
$ rm -f *.log
$ rm -i blender-git-2.78.4.20170114.tar.gz


$ cd && maj-repolocal
$ sync

!!! EN ROOT
# cd
# pacman -Syu
!!! OU
# pacman -R blender-git blender-addons-yafaray-git
# pacman -Syu blender-git


!!! MODIFIER FICHIERS
!!! EN USER

!!! SI CHANGEMENT DE VERSION ( 2.77 -> 2.78  ... )

$ cd
$ cp -r .config/blender/2.77 .config/blender/2.78
# SUPPRIME FICHIERS bvh_XXXX DANS .config/blender/2.78/cache
$ rm -f .config/blender/2.78/cache/bvh_*

# SUPPRINE VERSION N-2
$ rm -rf .config/blender/2.76

================================================================
ANCIENS
========
# OPENVDB : SI VERSION >= 4
------------------------------------

# OPENVDB : SI VERSION >= 4
------------------------------------
        -DOPENVDB_3_ABI_COMPATIBLE=ON \

CMake Warning:
  Manually-specified variables were not used by the project:

    OPENVDB_3_ABI_COMPATIBLE

==> ERREUR COMPILATION

