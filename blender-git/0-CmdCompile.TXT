# Le répertoire
===============
!!! EN USER
cd $HOME/05-builds/blender-git

1-1) ATTENTION A LA DATE DE MAJ SUR LE SITE
======================================================
AM = matin  PM = après-midi
---------------------------
http://git.blender.org/gitweb/gitweb.cgi/blender.git

committer	Campbell Barton <ideasman42@gmail.com>	
	Sun, 1 Nov 2020 09:11:08 +0100 (19:11 +1100)
commit	a1f46ac9dc71d66adced895a98f912a5d8440748

==> 20201101


1.3 SOURCES
==============
!!! Répertoire clone de blender dans : /0-DataLinux/05-builds-dir-git/blender
-----------------------------------------------------------------------------

cd /0-DataLinux/05-builds-dir-git

Vérifier existence rep blender :
-----------------------------------
ls | grep blender

!!! SI REP blender N'EXISTE PAS
-------------------------------
git clone http://git.blender.org/blender.git
cd blender
git submodule update --init --recursive
git submodule foreach git checkout master
git submodule foreach git pull --rebase origin master


!!! LIRE MY_WC_HASH
-------------------
git rev-parse --short=12 HEAD
==> MY_WC_HASH = a1f46ac9dc71

!!! LIRE MY_WC_BRANCH
---------------------
git rev-parse --abbrev-ref HEAD
==> MY_WC_BRANCH = master

!!! LIRE MY_WC_COMMIT_TIMESTAMP
-------------------------------
git log -1 --format=%ct
==> MY_WC_COMMIT_TIMESTAM = 1604218268

cd ..

!!! SI REP blender EXISTE
-------------------------
https://wiki.blender.org/wiki/Tools/Git#Repository_Update
---------------------------------------------------------
cd blender
git pull --rebase
git submodule foreach git pull --rebase origin master


!!! Vérifier si build_files/cmake/buildinfo.cmake est modifié
-------------------------------------------------------------
!!! LIRE MY_WC_HASH
-------------------
git rev-parse --short=12 HEAD
==> MY_WC_HASH = a1f46ac9dc71

!!! LIRE MY_WC_BRANCH
---------------------
git rev-parse --abbrev-ref HEAD
==> MY_WC_BRANCH = master

!!! LIRE MY_WC_COMMIT_TIMESTAMP
-------------------------------
git log -1 --format=%ct
==> MY_WC_COMMIT_TIMESTAM = 1604218268

cd ..


!!! Vérifier si CMakeLists.txt est modifié :
--------------------------------------------
==> OUI ==> CMAKELISTS.TXT = MODIFIÉ
==> NON ==> CMAKELISTS.TXT = NON_MODIFIÉ
==> CMAKELISTS.TXT=NON_MODIFIÉ


!!!!! Vérifier VERSION : 
head -n 60 blender/source/blender/blenkernel/BKE_blender_version.h | grep VERSION

#define BLENDER_VERSION 292
#define BLENDER_VERSION_PATCH 0
#define BLENDER_VERSION_CYCLE alpha
....
#define BLENDER_FILE_SUBVERSION 1

==> Version = BLENDER_VERSION.BLENDER_VERSION_PATCH.BLENDER_FILE_SUBVERSION

==> Version = 2.92.0.1

==> Version = 2.92.0.1.20201101

1-7) FAIRE ARCHIVE TAR.GZ
=================================

tar -cvzf blender-git-2.92.0.1.20201101.tar.gz --exclude=.git blender

1-7-1) Copie ARCHIVE TAR.GZ ds rep compile
==========================================
cd $HOME/05-builds/blender-git

!!! CONSERVE VERSION DANS 05-builds-dir-git
-------------------------------------------
cp -v /0-DataLinux/05-builds-dir-git/blender-git-2.92.0.1.20201101.tar.gz .

!!! OPTIX CONSERVE VERSION DANS 05-builds-dir-git
-------------------------------------------------
cp -v /0-DataLinux/05-builds-dir-git/OptiX-7.2.0-include.zip .


1-8) FAIRE PATCH
===============================
voir CmdFairePatches.TXT


2-1) MODIFIER LE PKGBUILD
========================
# Maintainer: Name <name@fai.com>

pkgname=blender-git
pkgver=2.92.0.1.20201101
pkgrel=2    # TEST AVEC nanovdb PAS OK

pkgrel=1
pkgrel=1    # TEST AVEC OPTIX
pkgrel=1    # AVEC PATCH embree dynamic libs
pkgrel=1    # Avec OIIO 2.1.11.2

pkgrel=2    # TEST AVEC USD et /usr/share/usd/plugin
pkgrel=1    # TEST AVEC USD

pkgrel=1    # Avec openimagedenoise + dynamic clibs

pkgrel=3    # -DCMAKE_C_FLAGS_RELEASE:STRING=-DNDEBUG \
              -DCMAKE_CXX_FLAGS_RELEASE:STRING=-DNDEBUG \
pkgrel=2    # Test Avec openimagedenoise + staticlibs
pkgrel=2    # Test Avec Embree + staticlibs

depends=('desktop-file-utils' 'hicolor-icon-theme' 'shared-mime-info'
          ... 'openjpeg2' 
         ...
         'jemalloc'
         'opencolorio'
!!! POUR ant_landscape
         'python-numpy'
!!! POUR BlenderKit Asset Library
         'python-requests'

         'llvm-libs'
         'potrace' 'pugixml'
         'opencollada-git' 'openshadinglanguage-git' 'openimageio-git'
         'opensubdiv-git' 'openvdb-git' 'alembic-git'
         'embree-git' 'openimagedenoise-git' 'usd-git'
)

makedepends=('cmake' 'boost' 'mesa' 'llvm'
             'cuda'
!!! POUR BUILDINFO
             'git'
             'nanovdb-git'    SI WITH_NANOVDB = ON PAS OK
!!!!!!
LIGNE 495 WITH_LINKER_LLD: SI ON ==> 'lld'
)

!!!!!!
_gitname="blender"

!!!!!!
_slot="2.92"

!!!!!!
options=('!strip')
/!\/!\/!\//!\/!\!\
!!!!!! ESSAI
#options=('!strip')
  -> Stripping unneeded symbols from binaries and libraries...
strip: Unable to recognise the format of the input file `./usr/share/blender/2.92/scripts/addons/cycles/lib/kernel_sm_52.cubin'
strip: Unable to recognise the format of the input file `./usr/share/blender/2.92/scripts/addons/cycles/lib/filter_sm_52.cubin'


SANS PATCH
----------
source=("$pkgname-$pkgver.tar.gz"
        "OptiX-7.2.0-include.zip"
)

sha256sum blender-git-2.92.0.1.20201101.tar.gz

sha256sum OptiX-7.2.0-include.zip

sha256sums=('123...'
            '456...'
)

!!!!!
!!!!! VOIR TESTS LIGNES 602 À 613
!!!!!
prepare() {
  cd "${_gitname}"
  # Cycles: Workaround for performance loss with the CUDA 9.0 SDK.
  # Commit 1febc860609c060603073301a6c6dae44c737830 du 21/11/2017. Stefan Werner
  sed -i -e "s|define CUDA_KERNEL_MAX_REGISTERS 48|define CUDA_KERNEL_MAX_REGISTERS 64|" intern/cycles/kernel/kernels/cuda/kernel_config.h
  
/!\/!\/!\/!\/!\
!!!!! VOIR LIGNES 50 - 60 - 60
  # Buildinfo : Workaround for HASH, BRANCH et COMMIT_TIMESTAMP
  sed -i -e 's|MY_WC_HASH "unknown"|MY_WC_HASH "a1f46ac9dc71"|' build_files/cmake/buildinfo.cmake
  sed -i -e 's|MY_WC_BRANCH "unknown"|MY_WC_BRANCH "master"|' build_files/cmake/buildinfo.cmake
  sed -i -e 's|MY_WC_COMMIT_TIMESTAMP 0|MY_WC_COMMIT_TIMESTAMP 1604218268|' build_files/cmake/buildinfo.cmake
}


# PYTHON : VOIR PKGBUILD sur COMMUNITY
--------------------------------------
!!! VÉRIFIER VERSION PYTHON INSTALLÉE
$ pacman -Ss python | grep 3 | grep install
==> extra/python 3.8.6-1 [installé]

    -DPYTHON_VERSION=3.8 \
    -DPYTHON_LIBPATH=/usr/lib \
    -DPYTHON_LIBRARY=python3.8 \
    -DPYTHON_INCLUDE_DIRS=/usr/include/python3.8 \


2-2) VERIFIER CMakeLists.txt SI MODIFIÉ
    VALEUR CMAKELISTS.TXT=MODIFIÉ
=======================================
kwrite /0-DataLinux/05-builds-dir-git/blender/CMakeLists.txt &

# Blender internal features
166 option WITH_BUILDINFO   ON   makedepends = git

Ligne 191
"Enable VR features through the OpenXR specification"
  option(WITH_XR_OPENXR    ON ==> OFF

Ligne 193
option(WITH_GMP "Enable features depending on GMP (Exact Boolean)" ON)

# Compositor
197 option WITH_OPENIMAGEDENOISE  ON   dep = openimagedenoise-git
199 option WITH_OPENSUBDIV        ON   dep = opensubdiv-git
201 option WITH_POTRACE           ON   dep = potrace
202 option WITH_OPENVDB           ON   dep = openvdb-git
206 option WITH_NANOVDB           OFF   si ON make dep = nanovdb-git ON PAS OK

219 WITH_GHOST_WAYLAND    OFF

265     !!! VOIR
if(UNIX AND NOT APPLE)
	option WITH_SYSTEM_EIGEN3 "Use the systems Eigen3 library" OFF)
endif()

Lignes 289 et ...
# Alembic support
option WITH_ALEMBIC             ON  dep = alembic-git

Lignes 292
# Universal Scene Description support
option(WITH_USD                 ON  dep = usd-git

Ligne 295
# 3D format support
297   option WITH_OPENCOLLADA	ON  dep = opencollada-git

# Sound output
303   option WITH_JACK          ==> OFF         si ON  dep =  jack

# Logging/unbit test libraries.

# Misc
338	option WITH_INPUT_NDOF		==> OFF


340xx 	WITH_INSTALL_PORTABLE       ON   ==> OFF

348     WITH_PYTHON_INSTALL             ON   ==> OFF

358     WITH_PYTHON_INSTALL_NUMPY       ON   ==> OFF

361     WITH_PYTHON_INSTALL_REQUESTS       ON   ==> OFF

        
370 # Cycles
option WITH_CYCLES			ON   dep = openimageio(-git)
option WITH_CYCLES_OSL      ON   dep = openshadinglanguage(-git)

!!! -- Could NOT find EMBREE (missing: _embree_LIBRARIES)
!!! OK si embree(-git) compilé avec DYNAMIC LIBS + PATCH
option WITH_CYCLES_EMBREE           ON  makedepends = embree(-git)

option WITH_CYCLES_CUDA_BINARIES	==> ON makedepends = cuda
        
Ligne 380
URL  GPU et sm_??  : https://developer.nvidia.com/cuda-gpus
https://developer.nvidia.com/cuda-gpus#collapse4

exemples :  GeForce GTX 980     5.2
            GeForce RTX 2080    7.5
            GeForce RTX 2080    8.6
  -DCYCLES_CUDA_ARCH=sm_52    -DCYCLES_CUDA_BINARIES_ARCH=sm_52
!!! A VOIR ???
  -DCYCLES_CUDA_ARCH=sm_52    -DCYCLES_CUDA_BINARIES_ARCH="sm_52;compute_80"
!!! OU
  -DCYCLES_CUDA_ARCH=sm_52    -DCYCLES_CUDA_BINARIES_ARCH="sm_52;compute_86"


!!! SI PLUSIEURS CUDA BINARIES:
================================
exemple : GeForce GTX 980 5.2 ET GeForce GTX 1080TI 6.1
-DCYCLES_CUDA_BINARIES_ARCH="sm_52;sm_61"
!!! A VOIR ???
-DCYCLES_CUDA_BINARIES_ARCH="sm_52;sm_61;compute_80"

Ligne 383 ????
option WITH_CYCLES_LOGGING     ON ???
        
!!! A VOIR ???
385 WITH_CYCLES_NATIVE_ONLY	OFF   	==> ON   (-march=native)

!!! VOIR https://git.blender.org/gitweb/gitweb.cgi/blender.git/commit/a2b52dc5716a97e5413acbd6eefc9ce3788b6456
394 option WITH_CYCLES_DEVICE_OPTIX   OFF  ==> ON

!!! A VOIR ???
401   WITH_CUDA_DYNLOAD     ON

404 # LLVM
$ pacman -Ss llvm | grep install
extra/llvm 10.0.1-3 [installé]
extra/llvm-libs 10.0.1-3 [installé]

!!! A VOIR ???
405 option WITH_LLVM   	OFF  ==> ON   ==> OFF : SUPPR makedeps 'llvm' et dep 'llvm-libs'
==> VOIR LIGNE 718 ET ...: # auto enable llvm for cycles_osl
==> VOIR LIGNE 846 ET ...:

# Debug
433 option WITH_BOOST     ON
434 option WITH_TBB     ON  dep = tbb

Lignes 441 et ...
# This should be turned off when Blender enter beta/rc/release
option WITH_EXPERIMENTAL_FEATURES "Enable experimental features (still need to enable them in the user preferences)" ON)

# Documentation
Lignes 456 et ...
if(UNIX AND NOT APPLE)
        option WITH_DOC_MANPAGE "Create a manual page (Unix manpage)" OFF)    ==> ON ???
endif()


# OpenGL
# OpenGL : VOIR sortie cmd $ glxinfo | grep OpenGL
---------------------------------------------------
Lignes 255 et ...
        option WITH_SYSTEM_GLEW   OFF
        option WITH_SYSTEM_GLES   ON

Lignes 464 et ...
INCHANGÉS :
------------
464 WITH_OPENGL ON


# Compiler toolchain
Lignes 491 et ...

LIGNE 495 WITH_LINKER_LLD: SI ON ==> makedepends 'lld'

=================================================================

3-1) MAKEPKG TMPFS en CHROOT EN USER
====================================
!!! ATTENTION : ATTRIBUTS FICHIERS
==================================
$ ls -la
==> 
-rw-r--r--  1 jnd users 62492825 12 mai   11:07 blender-git-2.92.0.1.20201101.tar.gz
-rw-r--r--  1 jnd users    59812 15 mars  11:20 OptiX-7.2.0-include.zip
-rw-r--r--  1 jnd users     3765 12 mai   11:31 PKGBUILD

!!! A MODIFIER SI PAS OK !
===============================

3-1) MAKEPKG TMPFS en CHROOT EN USER
====================================
!!! EN USER

$ mkpkg-chroot-repo

SI depends= ,opencollada-git' 'openshadinglanguage-git' 'openimageio-git'
            'opensubdiv-git' 'openvdb-git' 'alembic-git' 'openimagedenoise-git'
            'embree-git' 'usd-git'
SI makedepends= 'nanovdb-git'
================================================================================
$ cp -v $HOME/00-repolocal/\
{\
openshadinglanguage-git-*-x86_64.pkg.tar.*,\
openimageio-git-*-x86_64.pkg.tar.*,\
opencollada-git-*-x86_64.pkg.tar.*,\
opensubdiv-git-*-x86_64.pkg.tar.*,\
openvdb-git-*-x86_64.pkg.tar.*,\
alembic-git-*-x86_64.pkg.tar.*,\
openimagedenoise-git-*-x86_64.pkg.tar.*,\
usd-git-*-x86_64.pkg.tar.*,\
embree-git-*-x86_64.pkg.tar.*,\
nanovdb-git-*-any.pkg.tar.*\
} \
/tmp/chrootrepo/

SI depends= ,opencollada-git' 'openshadinglanguage-git' 'openimageio-git'
            'opensubdiv-git' 'openvdb-git' 'alembic-git' 'openimagedenoise-git'
            'embree-git' 'usd-git'
================================================================================
$ cp -v $HOME/00-repolocal/\
{\
openshadinglanguage-git-*-x86_64.pkg.tar.*,\
openimageio-git-*-x86_64.pkg.tar.*,\
opencollada-git-*-x86_64.pkg.tar.*,\
opensubdiv-git-*-x86_64.pkg.tar.*,\
openvdb-git-*-x86_64.pkg.tar.*,\
alembic-git-*-x86_64.pkg.tar.*,\
openimagedenoise-git-*-x86_64.pkg.tar.*,\
usd-git-*-x86_64.pkg.tar.*,\
embree-git-*-x86_64.pkg.tar.*\
} \
/tmp/chrootrepo/


  FLOOP
--------
$ rm -f *~
$ mkpkg-tmpfs -m floop -g 18G

  FAST
-------
$ rm -f *~
$ mkpkg-tmpfs -m fast -g 18G
OU
$ rm -f *~
$ mkpkg-tmpfs -m fast -g 18G -l logs


$ rm -f *~
$ $HOME/bin/mkpkg-tmpfs -m fast -g 18G
OU
$ rm -f *~
$ $HOME/bin/mkpkg-tmpfs -m fast -g 18G -l logs

-------------------------------------------------------------------

  NATIVE
--------
$ rm -f *~
$ mkpkg-tmpfs -m native -g 18G
OU
$ rm -f *~
$ mkpkg-tmpfs -m native -g 18G -l logs
-------------------------------------------------------------------


$ rm -rf /tmp/chrootrepo

3) MAKEPKG DANS TMP EN USER
====================================
!!! EN ROOT
# LC_ALL=C pacman -Syu
OU
# maj

rm -f *~ \
&& sudo cp -v /etc/makepkg.conf /etc/makepkg.conf.backup.build.blender \
&& sudo cp -v -f /home/jnd/05-builds/0-copie-fichiers-chroot/makepkg.conf.loop /etc/makepkg.conf \
&& rm -rf /tmp/build \
&& mkdir /tmp/build \
&& cd /tmp/build \
&& cp -v $HOME/05-builds/blender-git/PKGBUILD . \
&& cp -v $HOME/05-builds/blender-git/blender-git-2.92.0.1.20201101.tar.gz . \
&& cp -v $HOME/05-builds/blender-git/OptiX-7.2.0-include.zip . \
&& LC_ALL=C makepkg -s \
&& cd $HOME/05-builds/blender-git \
&& cp -v -f /tmp/build/blender-git-*-x86_64.pkg.tar.* . \
&& rm -rf /tmp/build \
&& sudo mv -v -f /etc/makepkg.conf.backup.build.blender /etc/makepkg.conf

SI ERREUR :
------------
cd $HOME/05-builds/blender-git \
&& rm -rf /tmp/build \
&& sudo mv -v -f /etc/makepkg.conf.backup.build.blender /etc/makepkg.conf

==> Installing missing dependencies...
resolving dependencies...
:: There are 3 providers available for libgl:
:: Repository extra
   1) libglvnd  2) nvidia-304xx-utils  3) nvidia-340xx-utils

Enter a number (default=1): 


3-2) MAKEPKG en USER sur SSD
=============================
!!! EN USER
cd $HOME/05-builds/blender-git
$ rm -f *~

makepkg -s

makepkg -f

# Nettoyage...
!!! EN USER
rm -rf pkg src
rm -f *~

# Verifications...

==> WARNING: Package contains reference to $srcdir
usr/bin/blender
usr/share/blender/2.92/scripts/addons/cycles/shader/node_rgb_to_bw.oso
......
usr/share/blender/2.92/scripts/addons/cycles/shader/node_add_closure.oso

namcap blender-git-*-x86_64.pkg.tar.*

blender-git E: ELF file ('usr/share/blender/2.92/scripts/addons/cycles/lib/filter_sm_52.cubin') outside of a valid path.
blender-git E: ELF file ('usr/share/blender/2.92/scripts/addons/cycles/lib/kernel_sm_52.cubin') outside of a valid path.
blender-git W: ELF file ('usr/share/blender/2.92/scripts/addons/cycles/lib/filter_sm_52.cubin') lacks FULL RELRO, check LDFLAGS.
blender-git W: ELF file ('usr/share/blender/2.92/scripts/addons/cycles/lib/kernel_sm_52.cubin') lacks FULL RELRO, check LDFLAGS.
blender-git W: ELF file ('usr/share/blender/2.92/scripts/addons/cycles/lib/filter_sm_52.cubin') is unstripped.
blender-git W: ELF file ('usr/share/blender/2.92/scripts/addons/cycles/lib/kernel_sm_52.cubin') is unstripped.
blender-git W: ELF file ('usr/share/blender/2.92/scripts/addons/cycles/lib/filter_sm_52.cubin') lacks PIE.
blender-git W: ELF file ('usr/share/blender/2.92/scripts/addons/cycles/lib/kernel_sm_52.cubin') lacks PIE.

blender-git W: unneeded dependency on a package run when needed by hooks.
blender-git W: Dependency included and not needed ('desktop-file-utils')

blender-git W: Dependency included and not needed ('libsamplerate')

blender-git W: Dependency included and not needed ('python-numpy')
blender-git W: Dependency included and not needed ('python-requests')

# SUPPRIME ET REMPLACE LE PRÉCÉDENT DANS /0-DataLinux/00-repolocal/
-------------------------------------------------------------------
$ rm /0-DataLinux/00-repolocal/blender-git-*-x86_64.pkg.tar.*

$ cp -v blender-git-*-x86_64.pkg.tar.* /0-DataLinux/00-repolocal/

# DÉPLACE ET REMPLACE LE PRÉCÉDENT DANS  $HOME/00-repolocal
---------------------------------------------------------------
$ mv -v $HOME/00-repolocal/blender-git-*-x86_64.pkg.tar.* \
$HOME/00-repolocal/pkg-OLD/

$ mv -v blender-git-*-x86_64.pkg.tar.* $HOME/00-repolocal/


# SUPPRIME FICHIERS *~ ET FICHIER GIT SOURCE
--------------------------------------------
$ rm -f *~
$ rm -f *.log
$ rm -i blender-git-2.92.0.1.20201101.tar.gz
!!! OPTIX
$ rm -i OptiX-7.2.0-include.zip

$ cd && maj-repolocal
$ sync

!!! EN ROOT
# cd
# maj
OU
# LC_ALL=C pacman -Syu

# LC_ALL=C pacman -Syu blender-git


!!! MODIFIER FICHIERS
!!! EN USER

!!! SI CHANGEMENT DE VERSION ( 2.91 -> 2.92  ... )

$ cd
$ cp -r .config/blender/2.91 .config/blender/2.92
# SUPPRIME FICHIERS bvh_XXXX DANS .config/blender/2.92/cache
$ rm -f .config/blender/2.92/cache/bvh_*

# SUPPRINE VERSION N-2
$ rm -rf .config/blender/2.90

!!! MODIFIER FICHIERS sm_52.cubin (blender Cuda 10.1 -> moi Cuda 10.2)
!!! VOIR 00-Copie-fichiers-sm_52.cubin.TXT


================================================================
TESTS
========

/home/jnd/99-dwl-temp/kernel_config.h
#sed -i "s|-pipe -fPIC -funsigned-char -fno-strict-aliasing|-pipe -fPIC -funsigned-char -fno-strict-aliasing -floop-interchange -floop-strip-mine -floop-block|g" CMakeLists.txt
sed -i "s|define CUDA_KERNEL_MAX_REGISTERS 48|define CUDA_KERNEL_MAX_REGISTERS 64|g" /home/jnd/99-dwl-temp/kernel_config.h


/home/jnd/99-temp/blender/buildinfo.cmake
sed -i 's|MY_WC_HASH "unknown"|MY_WC_HASH "a1f46ac9dc71"|' /home/jnd/99-temp/blender/buildinfo.cmake

sed -i 's|MY_WC_BRANCH "unknown"|MY_WC_BRANCH "master"|' /home/jnd/99-temp/blender/buildinfo.cmake

sed -i 's|MY_WC_COMMIT_TIMESTAMP 0|MY_WC_COMMIT_TIMESTAMP 1604218268|' /home/jnd/99-temp/blender/buildinfo.cmake

================================================================
ANCIENS
========

AVEC PATCH
----------
source=("$pkgname-$pkgver.tar.gz"
        "D8063-cuda11.patch"
        "OptiX-7.2.0-include.zip"
)

sha256sum blender-git-2.92.0.1.20201101.tar.gz

sha256sum D8063-cuda11.patch

sha256sum OptiX-7.2.0-include.zip

sha256sums=('123...'
            '456...'
            '789...'
)

prepare() {
  cd "${_gitname}"
  # Cycles: Preliminary Cuda 11 build support
  # https://developer.blender.org/D8063
  patch -Np1 -i "${srcdir}/D8063-cuda11.patch"
  
-rw-r--r--  1 jnd users     4824 26 juil. 11:54 D8063-cuda11.patch

&& cp -v $HOME/05-builds/blender-git/D8063-cuda11.patch . \


0-0) OPTIX 7.0.0
================
https://github.com/archlinux/svntogit-community/blob/packages/blender/trunk/PKGBUILD
==> https://developer.download.nvidia.com/redist/optix/v7.0/OptiX-7.0.0-include.zip
==> b2cff73def3757d4259f4b4d318a8ccfe166bf7c215cbb2124f1c81bd6e742f96207285b24eb4d99b527b7b97dc6d5e8fdf2f16d78d5d1e2684c26d681328491

cd /0-DataLinux/05-builds-dir-git/

wget https://developer.download.nvidia.com/redist/optix/v7.0/OptiX-7.0.0-include.zip

sha512sum OptiX-7.0.0-include.zip
b2cff73def3757d4259f4b4d318a8ccfe166bf7c215cbb2124f1c81bd6e742f96207285b24eb4d99b527b7b97dc6d5e8fdf2f16d78d5d1e2684c26d681328491

sha256sum OptiX-7.0.0-include.zip
2a26613f227453b133a0be70f10658562ed8e373e78536f15afc1dc8ef357a74

!!! VOIR LIGNE 191
225 WITH_GMP    OFF ==> ON

AVEC PATCH
----------
source=("$pkgname-$pkgver.tar.gz"
        "Fix-Embree-staticlibs-dynamiclibs.patch"
        "D8063-cuda11.patch"
        "OptiX-7.0.0-include.zip"
)

sha256sum blender-git-2.92.0.1.20201101.tar.gz

sha256sum Fix-Embree-staticlibs-dynamiclibs.patch

sha256sum D8063-cuda11.patch

sha256sum OptiX-7.0.0-include.zip

sha256sums=('123...'
            '456...'
            '789...'
)

prepare() {
  cd "${_gitname}"
  # Embree : static libs --> dynamic libs
  # https://github.com/bartoszek/AUR-blender-2.8-git
  patch -Np1 -i "${srcdir}/Fix-Embree-staticlibs-dynamiclibs.patch"


-rw-r--r--  1 jnd users     1309  7 mars  11:42 Fix-Embree-staticlibs-dynamiclibs.patch
&& cp -v $HOME/05-builds/blender-git/Fix-Embree-staticlibs-dynamiclibs.patch . \
  
# New object types
326 option WITH_NEW_OBJECT_TYPES  ==> OFF

# New simulation data block
330 option WITH_NEW_SIMULATION_TYPE  ==> OFF

428 option WITH_TBB     ON  dep = intel-tbb

==> Version = BLENDER_VERSION.BLENDER_FILE_SUBVERSION.BLENDER_VERSION_PATCH

==> Version = 2.92.4.0

==> Version = 2.92.4.0.20200530

AVEC PATCH
----------
source=("$pkgname-$pkgver.tar.gz"
        "Fix-Embree-staticlibs-dynamiclibs.patch"
        "OptiX-7.0.0-include.zip"
        "Enable-Optix-7-for-non-RTX-card.patch"
)

sha256sum blender-git-2.92.0.1.20201101.tar.gz

sha256sum Fix-Embree-staticlibs-dynamiclibs.patch

sha256sum OptiX-7.0.0-include.zip

sha256sum Enable-Optix-7-for-non-RTX-card.patch

sha256sums=('123...'
            '456...'
            '789...'
            '024...'
)

prepare() {
  cd "${_gitname}"
  # Embree : static libs --> dynamic libs
  # https://github.com/bartoszek/AUR-blender-2.8-git
  patch -Np1 -i "${srcdir}/Fix-Embree-staticlibs-dynamiclibs.patch"
  # Enabling Optix 7 for non-RTX card
  # https://devtalk.blender.org/t/blender-2-8-cycles-optix-on-non-rtx-card/11224/1
  patch -Np1 -i "${srcdir}/Enable-Optix-7-for-non-RTX-card.patch"

&& cp -v $HOME/05-builds/blender-git/Enable-Optix-7-for-non-RTX-card.patch . \

AVEC PATCH
----------
source=("$pkgname-$pkgver.tar.gz"
        "Fix-T74278-Image-Object-handles-too-big.patch"
)

sha256sum blender-git-2.92.0.1.20201101.tar.gz

sha256sum Fix-T74278-Image-Object-handles-too-big.patch

sha256sums=(...
         ...
)

prepare() {
  cd "${_gitname}"
  # https://developer.blender.org/D6965
  # Fix T74278: Image Object handles too big
  patch -Np1 -i "${srcdir}/Fix-T74278-Image-Object-handles-too-big.patch"

blender-git W: Dependency included and not needed ('usd-git')

cd blender
git pull --rebase
git submodule update --init --recursive
git submodule foreach git checkout master
git submodule foreach git pull --rebase origin master

OU
===

Lignes 181 et ...
# customize...
if(UNIX AND NOT APPLE)
  # some of these libraries are problematic on Linux
  # disable less important dependencies by default
  set(_init_CODEC_FFMPEG                   OFF)
  set(_init_CYCLES_OSL                     OFF)
  set(_init_IMAGE_OPENEXR                  OFF)
  set(_init_JACK                           OFF)
  set(_init_OPENCOLLADA                    OFF)
  set(_init_OPENCOLORIO                    OFF)
  set(_init_SDL                            OFF)
  set(_init_FFTW3                          OFF)
  set(_init_OPENSUBDIV                     OFF)
  set(_init_OPENVDB                        OFF)
  set(_init_OPENIMAGEDENOISE               OFF)
endif()

# Blender internal features
229 option WITH_BUILDINFO   ==> ON   si ON makedepends = git

243 option WITH_FFTW3   ==> ON

247 option WITH_OPENCOLORIO   ==> ON

# Compositor
251 option WITH_OPENIMAGEDENOISE  ==> ON   si ON dep = openimagedenoise-git
253 option WITH_OPENSUBDIV   ==> ON   si ON dep = opensubdiv-git
255 option WITH_OPENVDB   ==> ON   si ON dep = openvdb-git
256 option WITH_OPENVDB_BLOSC   ==> ON

309     !!! VOIR
if(UNIX AND NOT APPLE)
	option WITH_SYSTEM_EIGEN3 "Use the systems Eigen3 library" OFF)
endif()

# Modifiers
318 option WITH_MOD_CLOTH_ELTOPO    NON : disabled
320 option WITH_MOD_OCEANSIM	==> ON

# Image format support
324 option WITH_IMAGE_OPENEXR	==> ON

# Audio/Video format support
333	option WITH_CODEC_FFMPEG	==> ON
334	option WITH_CODEC_SNDFILE	==> ON

Lignes 336 et ...
# Alembic support
option WITH_ALEMBIC             OFF ==> ON dep = alembic-git
option WITH_ALEMBIC_HDF5        "Enable Legacy Alembic Support (not officially supported)" OFF)

Lignes 340
# 3D format support
342   option WITH_OPENCOLLADA	ON 	    si ON dep = opencollada-git

# Sound output
345   option WITH_SDL   	==> ON
347   option WITH_JACK          ==> OFF         si ON  dep =  jack

# Compression
!!! VOIR
361   option WITH_DRACO   	==> ON

# Camera/motion tracking

# Logging/unbit test libraries.

# Freestyle

# Misc
381	option WITH_INPUT_NDOF		==> OFF


384 	WITH_INSTALL_PORTABLE       ON   ==> OFF

392     WITH_PYTHON_INSTALL             ON   ==> OFF

402     WITH_PYTHON_INSTALL_NUMPY       ON   ==> OFF

405     WITH_PYTHON_INSTALL_REQUESTS       ON   ==> OFF

        
414 # Cycles
option WITH_CYCLES			ON     si ON dep = openimageio(-git)
option WITH_CYCLES_OSL             ==> ON dep = openshadinglanguage(-git)

!!! -- Could NOT find EMBREE (missing: _embree_LIBRARIES)
!!! OK si embree(-git) compilé avec STATICS LIBS
option WITH_CYCLES_EMBREE           OFF  si ON makedepends = embree(-git)

option WITH_CYCLES_CUDA_BINARIES	==> ON dep = cuda
        
Ligne 424
URL  GPU et sm_??  : https://developer.nvidia.com/cuda-gpus
https://developer.nvidia.com/cuda-gpus#collapse4

exemple :  GeForce GTX 980    5.2
  -DCYCLES_CUDA_ARCH=sm_52    -DCYCLES_CUDA_BINARIES_ARCH=sm_52

!!! SI PLUSIEURS CUDA BINARIES:
================================
exemple : GeForce GTX 980 5.2 ET GeForce GTX 1080TI 6.1
-DCYCLES_CUDA_BINARIES_ARCH=sm_52;sm_61

Lignes 427 ????
option WITH_CYCLES_LOGGING     ON ???
        
!!! A VOIR ???
429 WITH_CYCLES_NATIVE_ONLY	OFF   	==> ON ???

!!! VOIR https://git.blender.org/gitweb/gitweb.cgi/blender.git/commit/a2b52dc5716a97e5413acbd6eefc9ce3788b6456
438 option WITH_CYCLES_DEVICE_OPTIX   "Enable Cycles OptiX support" OFF

!!! A VOIR ???
445   WITH_CUDA_DYNLOAD     ON


448 # LLVM
$ pacman -Ss llvm | grep install
extra/llvm 9.0.1-1 [installé]
extra/llvm-libs 9.0.1-1 [installé]

449 option WITH_LLVM   	OFF  ==> ON

# Debug
472 option WITH_BOOST     ON
473 option WITH_TBB     ON  dep = intel-tbb
474 option WITH_TBB_MALLOC_PROXY  OFF

# Documentation
Lignes 482 et ...
if(UNIX AND NOT APPLE)
        option WITH_DOC_MANPAGE "Create a manual page (Unix manpage)" OFF)    ==> ON ???
endif()


# OpenGL
# OpenGL : VOIR sortie cmd $ glxinfo | grep OpenGL
---------------------------------------------------
Lignes 299 et ...
        option WITH_SYSTEM_GLEW   OFF
        option WITH_SYSTEM_GLES   ON

Lignes 478 et ...
INCHANGÉS :
------------
489 WITH_OPENGL ON


# Compiler toolchain
Lignes 516 et ...

prepare() {
  cd "${_gitname}"
  # fix erreur : Referenced library 'python3.5' is an uninstalled dependency
  sed -i -e "s/python3.5/python/" release/scripts/addons_contrib/io_blend_utils/install_whl.py

  # Cycles: Workaround for performance loss with the CUDA 9.0 SDK.
  # Commit 1febc860609c060603073301a6c6dae44c737830 du 21/11/2017. Stefan Werner
  sed -i -e "s|define CUDA_KERNEL_MAX_REGISTERS 48|define CUDA_KERNEL_MAX_REGISTERS 64|" intern/cycles/kernel/kernels/cuda/kernel_config.h
  
/!\/!\/!\/!\/!\
!!!!! VOIR LIGNES 50 - 60 - 60
  # Buildinfo : Workaround for HASH, BRANCH et COMMIT_TIMESTAMP
  sed -i -e 's|MY_WC_HASH "unknown"|MY_WC_HASH "a1f46ac9dc71"|' build_files/cmake/buildinfo.cmake
  sed -i -e 's|MY_WC_BRANCH "unknown"|MY_WC_BRANCH "master"|' build_files/cmake/buildinfo.cmake
  sed -i -e 's|MY_WC_COMMIT_TIMESTAMP 0|MY_WC_COMMIT_TIMESTAMP 1604218268|' build_files/cmake/buildinfo.cmake
  
}

AVEC PATCH
----------
source=("$pkgname-$pkgver.tar.gz"
        "Fix-T64463-Visual-Artifacts-with-ColorRamp.patch"
)

sha256sum blender-git-2.92.0.1.20201101.tar.gz

sha256sum Fix-T64463-Visual-Artifacts-with-ColorRamp.patch

sha256sums=(...
         ...
)

prepare() {
  cd "${_gitname}"
  # https://developer.blender.org/D4843
  # Fix T64463: Visual Artifacts with ColorRamp
  patch -Np1 -i "${srcdir}/Fix-T64463-Visual-Artifacts-with-ColorRamp.patch"

-rw-r--r--  1 jnd users     1277 12 mai   11:21 Fix-T64463-Visual-Artifacts-with-ColorRamp.patch

&& cp -v $HOME/05-builds/blender-git/Fix-T64463-Visual-Artifacts-with-ColorRamp.patch . \

AVEC PATCH
----------
source=("$pkgname-$pkgver.tar.gz"
        "fix-TypeError-node_wrangler.patch"
        "fix-TypeError-mesh_discombobulator.patch"
)

sha256sum blender-git-2.92.0.1.20201101.tar.gz

sha256sum fix-TypeError-node_wrangler.patch
sha256sum fix-TypeError-mesh_discombobulator.patch

sha256sums=(...
         ...
)
prepare() {
  cd "${_gitname}"
  # TypeError: UILayout.label(): required parameter "text" to be a keyword argument!
  patch -Np1 -i "${srcdir}/fix-TypeError-node_wrangler.patch"
  patch -Np1 -i "${srcdir}/fix-TypeError-mesh_discombobulator.patch"

-rw-r--r--  1 jnd users     1570 22 avril 10:41 fix-TypeError-mesh_discombobulator.patch
-rw-r--r--  1 jnd users      646 17 mars  14:08 fix-TypeError-node_wrangler.patch

&& cp -v $HOME/05-builds/blender-git/fix-TypeError-node_wrangler.patch . \
&& cp -v $HOME/05-builds/blender-git/fix-TypeError-mesh_discombobulator.patch . \


==========================================================================
        "fix-SyntaxError-curve_tools.patch"
        "fix-SyntaxError-io_scene_cod.patch"
sha256sum fix-SyntaxError-curve_tools.patch
sha256sum fix-SyntaxError-io_scene_cod.patch
  # fix erreur : SyntaxError: positional argument follows keyword argument
  patch -Np1 -i "${srcdir}/fix-SyntaxError-curve_tools.patch"
  patch -Np1 -i "${srcdir}/fix-SyntaxError-io_scene_cod.patch"

-rw-r--r--  1 jnd users      606 21 avril 10:44 fix-SyntaxError-curve_tools.patch
-rw-r--r--  1 jnd users      694 21 avril 10:46 fix-SyntaxError-io_scene_cod.patch
&& cp -v $HOME/05-builds/blender-git/fix-SyntaxError-curve_tools.patch . \
&& cp -v $HOME/05-builds/blender-git/fix-SyntaxError-io_scene_cod.patch . \


!!! ERREUR Compile avec embree 3.5.2
         'embree-git'

blender-git E: ELF file ('usr/share/blender/2.91/scripts/addons/cycles/lib/filter_sm_52.cubin') outside of a valid path.
blender-git E: ELF file ('usr/share/blender/2.91/scripts/addons/cycles/lib/kernel_sm_52.cubin') outside of a valid path.
blender-git W: ELF file ('usr/share/blender/2.91/scripts/addons/cycles/lib/filter_sm_52.cubin') lacks FULL RELRO, check LDFLAGS.
blender-git W: ELF file ('usr/share/blender/2.91/scripts/addons/cycles/lib/kernel_sm_52.cubin') lacks FULL RELRO, check LDFLAGS.
blender-git W: ELF file ('usr/bin/blender') is unstripped.
blender-git W: ELF file ('usr/share/blender/2.91/scripts/addons/cycles/lib/filter_sm_52.cubin') is unstripped.
blender-git W: ELF file ('usr/share/blender/2.91/scripts/addons/cycles/lib/kernel_sm_52.cubin') is unstripped.
blender-git W: ELF file ('usr/share/blender/2.91/scripts/addons/cycles/lib/filter_sm_52.cubin') lacks PIE.
blender-git W: ELF file ('usr/share/blender/2.91/scripts/addons/cycles/lib/kernel_sm_52.cubin') lacks PIE.

        "fix-SyntaxError-io_convert_image_to_mesh_img.patch"
sha256sum fix-SyntaxError-io_convert_image_to_mesh_img.patch
  patch -Np1 -i "${srcdir}/fix-SyntaxError-io_convert_image_to_mesh_img.patch"
-rw-r--r--  1 jnd users      767 10 févr. 14:22 fix-SyntaxError-io_convert_image_to_mesh_img.patch
&& cp -v $HOME/05-builds/blender-git/fix-SyntaxError-io_convert_image_to_mesh_img.patch . \

# Dependency graph
Lignes 547 et ...
WITH_LEGACY_DEPSGRAPH ON

/!\ /!\ /!\ UTILITÉ ???
!!! SI CHANGEMENT DE VERSION (ex de 2.90 à 2.91)

==> Modifier blender.install

/!\ /!\ /!\ UTILITÉ ???
1-9) MODIFIER blender.install
=================================
#install="blender.install"


!!!!!!
#install="blender.install"

!!!!!!!!!!
/!\ /!\ /!\ UTILITÉ ???
!!! SI MODIFS ==> MODIFIER blender.install
==========================================

-rw-r--r--  1 jnd users     1228  1 oct.  16:46 blender.install

SI depends=( 'openshadinglanguage-git' )
==========================================================
$ cp -v $HOME/00-repolocal/openshadinglanguage-git-*-x86_64.pkg.tar.* \
/tmp/chrootrepo/

SI depends=( 'openimageio-git' )
==========================================================
$ cp -v $HOME/00-repolocal/openimageio-git-*-x86_64.pkg.tar.* \
/tmp/chrootrepo/

SI depends=( 'opencollada-git' )
==========================================================
$ cp -v $HOME/00-repolocal/opencollada-git-*-x86_64.pkg.tar.* \
/tmp/chrootrepo/

SI depends=( 'opensubdiv-git' )
==========================================================
$ cp -v $HOME/00-repolocal/opensubdiv-git-*-x86_64.pkg.tar.* \
/tmp/chrootrepo/

SI depends=( 'openvdb-git' )
==========================================================
$ cp -v $HOME/00-repolocal/openvdb-git-*-x86_64.pkg.tar.* \
/tmp/chrootrepo/

SI depends=( 'alembic-git' )
==========================================================
$ cp -v $HOME/00-repolocal/alembic-git-*-x86_64.pkg.tar.* \
/tmp/chrootrepo/

!!! SI REP blender EXISTE
-------------------------
cd blender

git pull --rebase
git submodule foreach git pull --rebase origin master

OU
---
git pull --rebase
git submodule update --init --recursive
git submodule foreach git checkout master
git submodule foreach git pull --rebase origin master


rm -f *~ \
&& sudo cp -v /etc/makepkg.conf /etc/makepkg.conf.backup.build.blender \
&& sudo cp -v -f /home/jnd/05-builds/0-copie-fichiers-chroot/makepkg.conf.fast /etc/makepkg.conf \
&& rm -rf /tmp/build \
&& mkdir /tmp/build \
&& cd /tmp/build \
&& cp -v $HOME/05-builds/blender-git/PKGBUILD . \
&& cp -v $HOME/05-builds/blender-git/blender-git-2.92.0.1.20201101.tar.gz . \
&& cp -v $HOME/05-builds/blender-git/blender.install . \
&& LC_ALL=C makepkg -s \
&& cd $HOME/05-builds/blender-git \
&& cp -v -f /tmp/build/blender-git-*-x86_64.pkg.tar.* . \
&& rm -rf /tmp/build \
&& sudo mv -v -f /etc/makepkg.conf.backup.build.blender /etc/makepkg.conf



AVEC PATCH
----------
source=("$pkgname-$pkgver.tar.gz"
        'fix-SyntaxError-object_facemap_auto.patch'
)

sha256sum blender-git-2.92.0.1.20201101.tar.gz

sha256sum fix-SyntaxError-object_facemap_auto.patch

sha256sums=('...'
            '...'
)

!!!!!
!!!!! VOIR TESTS LIGNES 602 À 613
!!!!!
prepare() {
  cd "${_gitname}"
  # fix erreur : SyntaxError: Generator expression must be parenthesized (auto_fmap_widgets.py, line 327)
  patch -Np1 -i "${srcdir}/fix-SyntaxError-object_facemap_auto.patch"
  
  # fix erreur : Referenced library 'python3.5' is an uninstalled dependency
  sed -i -e "s/python3.5/python/" release/scripts/addons/io_blend_utils/install_whl.py

  # Cycles: Workaround for performance loss with the CUDA 9.0 SDK.
  # Commit 1febc860609c060603073301a6c6dae44c737830 du 21/11/2017. Stefan Werner
  sed -i -e "s|define CUDA_KERNEL_MAX_REGISTERS 48|define CUDA_KERNEL_MAX_REGISTERS 64|" intern/cycles/kernel/kernels/cuda/kernel_config.h
  
/!\/!\/!\/!\/!\
!!!!! VOIR LIGNES 50 - 60 - 60
  # Buildinfo : Workaround for HASH, BRANCH et COMMIT_TIMESTAMP
  sed -i -e 's|MY_WC_HASH "unknown"|MY_WC_HASH "a1f46ac9dc71"|' build_files/cmake/buildinfo.cmake
  sed -i -e 's|MY_WC_BRANCH "unknown"|MY_WC_BRANCH "master"|' build_files/cmake/buildinfo.cmake
  sed -i -e 's|MY_WC_COMMIT_TIMESTAMP 0|MY_WC_COMMIT_TIMESTAMP 1604218268|' build_files/cmake/buildinfo.cmake
  
}

-rw-r--r--  1 jnd users      877  7 août  15:33 fix-SyntaxError-object_facemap_auto.patch

&& cp -v $HOME/05-builds/blender-git/fix-SyntaxError-object_facemap_auto.patch . \

-------------------------------------------------------------------
!!! GCC 5.3 ET FAST => OK SI LIGNE SED COMMENTÉE
!!! GCC 5.3 ET FAST => ERREUR : INTERNAL COMPILER ERROR SI LIGNE SED DÉCOMMENTÉE
