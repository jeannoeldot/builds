# Maintainer: Name <name@fai.com>

pkgname=blender-git
pkgver=4.3.0.16.20240811
pkgrel=1
pkgdesc="A fully integrated 3D graphics creation suite"
arch=('x86_64')
license=('GPL-3.0-or-later')
url="https://blender.org/"
depends=('desktop-file-utils' 'hicolor-icon-theme' 'shared-mime-info'
          'libpng' 'openjpeg2' 'libtiff' 'openexr' 'libwebp' 'libjpeg-turbo'
          'python'
          'ffmpeg' 'fftw'
          'openal' 'freetype2' 'libsndfile' 'jack2' 'pipewire-pulse'
          'sdl2'
          'libglvnd' 'glfw' 'libxi'
          'boost-libs' 'onetbb' 'draco'
          'jemalloc'
          'python-numpy' 'python-psutil' 'python-requests' 'python-zstandard' 'pystring'
          'llvm-libs' 'clang'
          'potrace' 'pugixml' 'libharu' 'libepoxy'
          'libdecor' 'libxkbcommon'
          'fribidi' 'harfbuzz' 'minizip-ng' 'pybind11' 'shaderc'
          'vulkan-headers' 'vulkan-icd-loader' 'vulkan-driver'
          'opencolorio' 'libdeflate'
          'pcre' 'opencollada-git' 'openimageio-git'
          'openshadinglanguage-git'
          'opensubdiv-git' 'openvdb-git' 'alembic-git'
          'embree-git' 'openimagedenoise-git'
          'openpgl-git' 'materialx' 'openusd-git'
          'zstd'
)
makedepends=('git' 'git-lfs' 'cmake' 'boost' 'mesa' 'llvm'
             'cuda'
             'wayland-protocols'
             'mold'
)
optdepends=('cuda: cycles renderer cuda support')
conflicts=('blender')
provides=('blender')
#options=('!strip')
options=('!lto' '!debug')
source=("$pkgname-$pkgver.tar.zst"
        "OptiX-8.0-Include.zip"
        "force-draco1.patch"
        "force-draco2.patch"
        "blender-4.3-mantaflow-python-3.12.patch"
        "ffmpeg-7-1.patch"
        "ffmpeg-7-2.patch"
)
sha256sums=('b4713f1401dcd76974518d173e60e6d0e531279ba31025a22ccdd51649dc55c1'
            'ba617fbb61587bac99106dbd6cda5a27c9d178308cc423878ed72b220b8b951c'
            '0d954ea85a646822d8bc0eeba688f6e10a98db0ca9d3564241dc1b595aca41c0'
            'fcdf01131c0e61ee106b061803feac385a8c4071e6dda6ea8155cb734d1600b3'
            '53594d1f7fbbd56de184de87ae4939078a30eba8af061c8039865a1d51149a25'
            '17d5fb1c4ddb9e95da590d2e43ae3f7ce2b02c3ec698b16ed2752e3b3e7840c0'
            '499a9ec9a1aa7c5ef26ce5bb26f48576cccf1fc5906e966f92e25506405e9ad0'
)

_gitname="blender"

prepare() {
  cd "${_gitname}"

  # fix draco
  patch -p1 -i "$srcdir"/force-draco1.patch
  patch -p1 -d scripts/addons_core -i "$srcdir"/force-draco2.patch

  # fix fluid sim domain with python 3.12
  # https://gitlab.archlinux.org/archlinux/packaging/packages/blender/-/issues/18
  patch -p1 -i "$srcdir"/blender-4.3-mantaflow-python-3.12.patch

  # fix build with ffmpeg 7
  patch -p1 -i "$srcdir"/ffmpeg-7-1.patch
  patch -p1 -i "$srcdir"/ffmpeg-7-2.patch

  ## Cycles: Workaround for performance loss with the CUDA 9.0 SDK.
  ## Commit 1febc858559c054603073301a6c6dae44c737830 du 21/11/2017. Stefan Werner
  #sed -i -e "s|define CUDA_KERNEL_MAX_REGISTERS 48|define CUDA_KERNEL_MAX_REGISTERS 64|" intern/cycles/kernel/kernels/cuda/kernel_config.h

  # Workaround for python-numpy 2.0.0
  sed -i -e 's|numpy "core/include"|numpy "_core/include"|' CMakeLists.txt

  # Buildinfo : Workaround for HASH, BRANCH et COMMIT_TIMESTAMP
  sed -i -e 's|MY_WC_HASH "unknown"|MY_WC_HASH "30038f17105a"|' build_files/cmake/buildinfo.cmake
  sed -i -e 's|MY_WC_BRANCH "unknown"|MY_WC_BRANCH "main"|' build_files/cmake/buildinfo.cmake
  sed -i -e 's|MY_WC_COMMIT_TIMESTAMP 0|MY_WC_COMMIT_TIMESTAMP 1723345655|' build_files/cmake/buildinfo.cmake
}

build() {
  cd "${_gitname}"
  
  local _python_ver=3.12
  local _llvm_libs_ver=18

  cmake \
        -Bbuild \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_C_FLAGS_RELEASE:STRING=-DNDEBUG \
        -DCMAKE_CXX_FLAGS_RELEASE:STRING=-DNDEBUG \
        -DCMAKE_SKIP_RPATH=ON \
        -DOPTIX_ROOT_DIR="${srcdir}" \
        -DWITH_XR_OPENXR=OFF \
        -DWITH_SYSTEM_FREETYPE=ON \
        -DWITH_LIBS_PRECOMPILED=OFF \
        -DWITH_INPUT_NDOF=OFF \
        -DWITH_INSTALL_PORTABLE=OFF \
        -DWITH_PYTHON_INSTALL=OFF \
        -DWITH_PYTHON_INSTALL_NUMPY=OFF \
        -DWITH_PYTHON_INSTALL_REQUESTS=OFF \
        -DWITH_PYTHON_INSTALL_ZSTANDARD=OFF \
        -DCUDA_HOST_COMPILER="$NVCC_CCBIN" \
        -DWITH_CYCLES_CUDA_BINARIES=ON \
        -DCYCLES_CUDA_BINARIES_ARCH="sm_86;compute_86" \
        -DWITH_CYCLES_NATIVE_ONLY=ON \
        -DWITH_CYCLES_DEVICE_HIP=OFF \
        -DWITH_CYCLES_DEVICE_METAL=OFF \
        -DWITH_LLVM=ON \
        -DLLVM_ROOT_DIR=/usr \
        -DLLVM_LIBPATH=/usr/lib \
        -DLLVM_LIBRARY=/usr/lib/libLLVM-${_llvm_libs_ver}.so \
        -DLLVM_INCLUDE_DIRS=/usr/include \
        -DWITH_CLANG=ON \
        -DCLANG_INCLUDE_DIR=/usr/include/clang \
        -D_clang_LIBRARIES=/usr/lib \
        -DWITH_LINKER_GOLD=OFF \
        -DWITH_LINKER_MOLD=ON \
        -DPYTHON_VERSION=${_python_ver} \
        -DPYTHON_LIBPATH=/usr/lib \
        -DPYTHON_LIBRARY=python${_python_ver} \
        -DPYTHON_INCLUDE_DIRS=/usr/include/python${_python_ver}
  make -C build
}

package() {
  # Blender
  cd "${_gitname}"
  DESTDIR="${pkgdir}" make -C build install

  # voir Community
  python -m compileall -d /usr/share/blender "${pkgdir}/usr/share/blender"
  python -O -m compileall -d /usr/share/blender "${pkgdir}/usr/share/blender"

  # Manually install draco bindings (See FS#73415)
  mkdir -p "${pkgdir}/usr/lib/python${_python_ver}"/
  mv "${pkgdir}"/usr/share/blender/4*/python/lib/* "${pkgdir}"/usr/lib/
  rm -r "${pkgdir}"/usr/share/blender/4*/python
  rm -r "${pkgdir}"/usr/lib/python
}
