FAIRE PATCHS
====================================

!!! VERSION = 1.1.2


/!\ /!\ /!\ cd $HOME/05-builds/pokerth

/!\ /!\ /!\ rm -rf $HOME/99-temp/srcp

mkdir -p $HOME/99-temp/srcp

cp -v pokerth-1.1.2.tar.gz $HOME/99-temp/srcp/

cd $HOME/99-temp/srcp

tar -xzf pokerth-1.1.2.tar.gz

ls $HOME/99-temp/srcp
/!\ /!\ /!\


https://github.com/PointCloudLibrary/pcl/issues/6202
https://github.com/PointCloudLibrary/pcl/commit/0932486c52a2cf4f0821e25d5ea2d5767fff8381#diff-0648e12faefb09b55f716000a1cf2641de888cfd255b87bd3d22925da0513d70
boost::asio::io_service io_service; ==> boost::asio::io_context io_service;

https://github.com/jcelerier/websocketpp/commit/12d377ac47b06129ed51b08445eb059c86a349a5

Reference
post

    Requirements

Header: boost/asio/post.hpp Convenience header: boost/asio.hpp

VOIR : https://aur.archlinux.org/cgit/aur.git/plain/pokerth-1.1.2.patch.2019?h=pokerth


1) PATCH BOOST VERSION >= 1.71 / 1.87 ET websocketpp
======================================================
1-1) MODIFIER pokerth-1.1.2-rc/src/third_party/websocketpp/websocketpp/transport/asio/connection.hpp
----------------------------------------------------------------------------------------------------
cp -R pokerth-1.1.2-rc pokerth-1.1.2-rc.new

cd pokerth-1.1.2-rc.new/src/third_party/websocketpp/websocketpp/transport/asio
kwrite connection.hpp

MODIFIER LIGNE 89 :
    typedef lib::asio::io_service * io_service_ptr;
DEVIENT :
    typedef lib::asio::io_context * io_service_ptr;

MODIFIER LIGNE 91 :
    typedef lib::shared_ptr<lib::asio::io_service::strand> strand_ptr;
DEVIENT :
    typedef lib::shared_ptr<lib::asio::io_context::strand> strand_ptr;

AJOUTER LIGNE 94
    using clk = lib::chrono::steady_clock;


MODIFIER LIGNES 315-316-317 :
        timer_ptr new_timer = lib::make_shared<lib::asio::steady_timer>(
            lib::ref(*m_io_service),
            lib::asio::milliseconds(duration)
DEVIENNENT :
        timer_ptr new_timer(
            new lib::asio::steady_timer(
                *m_io_service,
                lib::asio::milliseconds(duration))

MODIFIER LIGNES 466 ET 467 :
            m_strand = lib::make_shared<lib::asio::io_service::strand>(
                lib::ref(*io_service));
DEVIENNENT :
            m_strand.reset(new lib::asio::io_context::strand(*io_service));




ENREGISTRER et Quitter Kwrite & EFFACER fichier connection.hpp~
rm -f connection.hpp~

cd ../../../../../../..

!!! POUR VÉRIFIER
diff -aur pokerth-1.1.2-rc pokerth-1.1.2-rc.new


2-1) MODIFIER pokerth-1.1.2-rc/src/third_party/websocketpp/websocketpp/transport/asio/endpoint.hpp
--------------------------------------------------------------------------------------------------
cd pokerth-1.1.2-rc.new/src/third_party/websocketpp/websocketpp/transport/asio
kwrite endpoint.hpp

MODIFIER LIGNES 194 ET 195 :
        m_acceptor = lib::make_shared<lib::asio::ip::tcp::acceptor>(
            lib::ref(*m_io_service));
DEVIENNENT :
        m_acceptor.reset(new lib::asio::ip::tcp::acceptor(*m_io_service));

MODIFIER LIGNES 662 À 664 :
        m_work = lib::make_shared<lib::asio::io_service::work>(
            lib::ref(*m_io_service)
        );
DEVIENNENT :
        m_work.reset(new lib::asio::io_service::work(*m_io_service));

MODIFIER LIGNES 826 À 827 :
            m_resolver = lib::make_shared<lib::asio::ip::tcp::resolver>(
                lib::ref(*m_io_service));
DEVIENNENT :
            m_resolver.reset(new lib::asio::ip::tcp::resolver(*m_io_service));


ENREGISTRER et Quitter Kwrite & EFFACER fichier endpoint.hpp~
rm -f endpoint.hpp~

cd ../../../../../../..

!!! POUR VÉRIFIER
diff -aur pokerth-1.1.2-rc pokerth-1.1.2-rc.new

3-1) MODIFIER pokerth-1.1.2-rc/src/third_party/websocketpp/websocketpp/transport/asio/security/none.hpp
-------------------------------------------------------------------------------------------------------
cd pokerth-1.1.2-rc.new/src/third_party/websocketpp/websocketpp/transport/asio/security
kwrite none.hpp

MODIFIER LIGNES 171 ET 172 :
        m_socket = lib::make_shared<lib::asio::ip::tcp::socket>(
            lib::ref(*service));
DEVIENNENT :
        m_socket.reset(new lib::asio::ip::tcp::socket(*service));

ENREGISTRER et Quitter Kwrite & EFFACER fichier none.hpp~
rm -f none.hpp~

cd ../../../../../../../..

!!! POUR VÉRIFIER
diff -aur pokerth-1.1.2-rc pokerth-1.1.2-rc.new

4-1) MODIFIER pokerth-1.1.2-rc/src/third_party/websocketpp/websocketpp/transport/asio/security/tls.hpp
------------------------------------------------------------------------------------------------------
cd pokerth-1.1.2-rc.new/src/third_party/websocketpp/websocketpp/transport/asio/security
kwrite tls.hpp

MODIFIER LIGNES 196 ET 197 :
        m_socket = lib::make_shared<socket_type>(
            _WEBSOCKETPP_REF(*service),lib::ref(*m_context));
DEVIENNENT :
        m_socket.reset(new socket_type(*service, *m_context));

ENREGISTRER et Quitter Kwrite & EFFACER fichier tls.hpp~
rm -f tls.hpp~

cd ../../../../../../../..


!!! POUR VÉRIFIER
diff -aur pokerth-1.1.2-rc pokerth-1.1.2-rc.new



------------------------------------------------------------------------------------
diff -aur pokerth-1.1.2-rc pokerth-1.1.2-rc.new > fix-build-websocketpp-with-boost.patch


!!! NON QUAND PATCHES FINIS !!! rm -rf pokerth-1.1.2-rc.new


cd $HOME/05-builds/pokerth

mv -vf $HOME/99-temp/srcp/fix-build-websocketpp-with-boost.patch .


9) QUAND PATCHES FINIS
=======================
rm -rf $HOME/99-temp/srcp

sync

=================================================================
