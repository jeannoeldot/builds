# Le répertoire
===============
!!! EN USER
cd $HOME/05-builds/blender280-git


1-1) ATTENTION A LA DATE DE MAJ SUR LE SITE
======================================================
AM = matin  PM = après-midi
---------------------------
https://developer.blender.org/diffusion/B/graph/blender2.8/
https://developer.blender.org/diffusion/B/history/blender2.8/

e4153946ad1e
==> Mon, Dec 11, 9.27 AM
==> 20181211

1.3 SOURCES
==============
!!! Répertoire clone de blender dans : /0-DataLinux/05-builds-dir-git/blender280
--------------------------------------------------------------------------------

cd /0-DataLinux/05-builds-dir-git

Vérifier existence rep blender280 :
-----------------------------------
ls | grep blender280

!!! SI REP blender280 N'EXISTE PAS
----------------------------------
git clone git://git.blender.org/blender.git -b blender2.8 blender280
cd blender280
git submodule update --init --recursive
git submodule foreach git checkout master
git submodule foreach git pull --rebase origin master

!!! LIRE MY_WC_HASH
-------------------
git rev-parse --short HEAD
==> MY_WC_HASH = 49b5d45118b

!!! LIRE MY_WC_BRANCH
---------------------
git rev-parse --abbrev-ref HEAD
==> MY_WC_BRANCH = blender2.8

!!! LIRE MY_WC_COMMIT_TIMESTAMP
-------------------------------
git log -1 --format=%ct
==> MY_WC_COMMIT_TIMESTAM = 1544523312

cd ..

!!! SI REP blender280 EXISTE
----------------------------
cd blender280
git pull --rebase

git submodule update --init --recursive
git submodule foreach "git checkout blender2.8 || git checkout master"
==> error: le spécificateur de chemin 'blender2.8' ne correspond à aucun fichier connu de git
git submodule foreach git pull --rebase origin
OU
git submodule update --init --recursive --remote

!!! LIRE MY_WC_HASH
-------------------
git rev-parse --short HEAD
==> MY_WC_HASH = 49b5d45118b

!!! LIRE MY_WC_BRANCH
---------------------
git rev-parse --abbrev-ref HEAD
==> MY_WC_BRANCH = blender2.8

!!! LIRE MY_WC_COMMIT_TIMESTAMP
-------------------------------
git log -1 --format=%ct
==> MY_WC_COMMIT_TIMESTAM = 1544523312


cd ..


!!! Vérifier si CMakeLists.txt est modifié :
--------------------------------------------
==> OUI ==> CMAKELISTS.TXT = MODIFIÉ
==> NON ==> CMAKELISTS.TXT = NON_MODIFIÉ
==> CMAKELISTS.TXT=MODIFIÉ


!!!!! Vérifier VERSION : 
$ head -n 45 blender280/source/blender/blenkernel/BKE_blender_version.h | grep VERSION

#define BLENDER_VERSION         280
#define BLENDER_SUBVERSION      37

==> Version = 2.80.37.20181211

!!! SI CHANGEMENT DE VERSION (ex de 2.80 à 2.81)

==> Modifier blender.install

1-7) FAIRE ARCHIVE TAR.GZ
=================================

tar -cvzf blender-git-2.80.37.20181211.tar.gz --exclude=.git blender280

1-7-1) Copie ARCHIVE TAR.GZ ds rep compile
==========================================
cd $HOME/05-builds/blender280-git

!!! CONSERVE VERSION DANS 05-builds-dir-git
-------------------------------------------
cp -v /0-DataLinux/05-builds-dir-git/blender-git-2.80.37.20181211.tar.gz .
sync


1-8) FAIRE PATCH
===============================
voir CmdFairePatches.TXT


1-9) MODIFIER blender.install
=================================


2-1) MODIFIER LE PKGBUILD
========================
# Maintainer: Moi <name AT fai DOT fr>

pkgname=blender-git
!!!!!!
pkgver=2.80.37.20181211
pkgrel=1



depends=('desktop-file-utils' 'hicolor-icon-theme' 'shared-mime-info'
          ...
         ...
         'jemalloc'
         'opencolorio'
!!!!!!
!!! POUR ant_landscape
          'python-numpy'
!!!!!!
!!!!!!
         'opencollada-git' 'openshadinglanguage-git' 'openimageio-git'
!!!!!!
         'opensubdiv-git' 'openvdb-git' 'alembic-git' 'embree-git'
!!!!!!
LLVM 7.0
         'llvm-libs'
!!!!!!
)

!!!!!!
LLVM 7.0
makedepends=('cmake' 'boost' 'mesa' 'llvm'
             'cuda'
!!! POUR BUILDINFO
             'git'
)

!!!!!!
_gitname="blender"

!!!!!!
_slot="2.80"

AVEC PATCH
----------
source=("$pkgname-$pkgver.tar.gz"
        'fix-SyntaxError-object_facemap_auto.patch'
)

sha256sum blender-git-2.80.37.20181211.tar.gz

sha256sum fix-SyntaxError-object_facemap_auto.patch

sha256sums=('...'
            '...'
)

!!!!!
!!!!! VOIR TESTS LIGNES 602 À 613
!!!!!
prepare() {
  cd "${_gitname}"
  # fix erreur : SyntaxError: Generator expression must be parenthesized (auto_fmap_widgets.py, line 327)
  patch -Np1 -i "${srcdir}/fix-SyntaxError-object_facemap_auto.patch"
  
  # fix erreur : Referenced library 'python3.5' is an uninstalled dependency
  sed -i -e "s/python3.5/python/" release/scripts/addons/io_blend_utils/install_whl.py

  # Cycles: Workaround for performance loss with the CUDA 9.0 SDK.
  # Commit 1febc858559c054603073301a6c6dae44c737830 du 21/11/2017. Stefan Werner
  sed -i -e "s|define CUDA_KERNEL_MAX_REGISTERS 48|define CUDA_KERNEL_MAX_REGISTERS 64|" intern/cycles/kernel/kernels/cuda/kernel_config.h
  
/!\/!\/!\/!\/!\
!!!!! VOIR LIGNES 50 - 55 - 60
  # Buildinfo : Workaround for HASH, BRANCH et COMMIT_TIMESTAMP
  sed -i -e 's|MY_WC_HASH "unknown"|MY_WC_HASH "49b5d45118b"|' build_files/cmake/buildinfo.cmake
  sed -i -e 's|MY_WC_BRANCH "unknown"|MY_WC_BRANCH "blender2.8"|' build_files/cmake/buildinfo.cmake
  sed -i -e 's|MY_WC_COMMIT_TIMESTAMP 0|MY_WC_COMMIT_TIMESTAMP 1544523312|' build_files/cmake/buildinfo.cmake
  
}

SANS PATCH
----------
source=("$pkgname-$pkgver.tar.gz"
)

sha256sum blender-git-2.80.37.20181211.tar.gz

sha256sums=(...
         ...
)

/!\/!\/!\/!\/!\
---------------
build() {
  ...
OpenVDB: Fix compilation error against OpenVDB 4
author	Sergey Sharybin <sergey.vfx@gmail.com>	
	Mon, 25 Sep 2017 11:41:30 +0200 (14:41 +0500)
commit	0d4e519b748c33f3f48fa4dcc4aa31ae398ed13a

Build: add WITH_OPENVDB_3_ABI_COMPATIBLE option.
author	Brecht Van Lommel <brechtvanlommel@gmail.com>	
	Mon, 2 Apr 2018 18:55:10 +0200 (18:55 +0200)
commit	71d7d6cd8c431b7f4fac8d65a4eaedf3cff6c8f6

==> INUTILE
  # OPENVDB : VERSION >= 4
  CXXFLAGS+=' -DOPENVDB_3_ABI_COMPATIBLE'
  ...


# PYTHON : VOIR PKGBUILD sur COMMUNITY
--------------------------------------
!!! VÉRIFIER VERSION PYTHON INSTALLÉE
$ pacman -Ss python | grep 3 | grep install
==> extra/python 3.7.1-1 [installé]

    -DPYTHON_VERSION=3.7 \
    -DPYTHON_LIBPATH=/usr/lib \
    -DPYTHON_LIBRARY=python3.7m \
    -DPYTHON_INCLUDE_DIRS=/usr/include/python3.7m \


2-2) VERIFIER CMakeLists.txt SI NON_MODIFIÉ
    VALEUR CMAKELISTS.TXT=MODIFIÉ
=======================================
  kwrite /0-DataLinux/05-builds-dir-git/blender/CMakeLists.txt &

Lignes 171 et ...
# customize...
if(UNIX AND NOT APPLE)
        # some of these libraries are problematic on Linux
        # disable less important dependencies by default
        set(_init_CODEC_FFMPEG                   OFF)   ==> ON
        set(_init_CYCLES_OSL                     OFF)   ==> ON
        set(_init_IMAGE_OPENEXR                  OFF)   ==> ON
        set(_init_JACK                           OFF)
        set(_init_OPENCOLLADA                    OFF)   ==> ON
        set(_init_OPENCOLORIO                    OFF)   ==> ON
        set(_init_SDL                            OFF)   ==> ON
        set(_init_FFTW3                          OFF)   ==> ON
        set(_init_OPENSUBDIV                     OFF)   ==> ON
endif()

# Blender internal features
218 option(WITH_BUILDINFO   ==> ON   si ON makedepends = git

232 option(WITH_FFTW3   ==> ON

236 option(WITH_GAMEENGINE   ==> OFF

243 option(WITH_OPENCOLORIO   ==> ON

# Compositor
248 option(WITH_OPENSUBDIV   ==> ON   si ON dep = opensubdiv-git
250 option(WITH_OPENVDB   ==> ON   si ON dep = openvdb-git
251 option(WITH_OPENVDB_BLOSC   ==> ON

302     !!! VOIR
if(UNIX AND NOT APPLE)
	option(WITH_SYSTEM_EIGEN3 "Use the systems Eigen3 library" OFF)
endif()


# Modifiers
311 option WITH_MOD_CLOTH_ELTOPO    NON : disabled
313 option WITH_MOD_OCEANSIM	==> ON

# Image format support
317 option(WITH_IMAGE_OPENEXR	==> ON

323 option WITH_IMAGE_FRAMESERVER    ==> OFF

# Audio/Video format support
327	option WITH_CODEC_FFMPEG	==> ON
328	option WITH_CODEC_SNDFILE	==> ON

Lignes 330 et ...
# Alembic support
option(WITH_ALEMBIC             OFF ==> ON dep = alembic-git
option(WITH_ALEMBIC_HDF5        "Enable Legacy Alembic Support (not officially supported)" OFF)

Lignes 334
# 3D format support
336   option WITH_OPENCOLLADA	ON 	    si ON dep = opencollada-git

# Sound output
339   option(WITH_SDL   	==> ON
341   option WITH_JACK          ==> OFF         si ON  dep =  jack

# Compression

# Camera/motion tracking

# Logging/unbit test libraries.

# Freestyle

# Misc
374	option WITH_INPUT_NDOF		==> OFF


377	WITH_INSTALL_PORTABLE       ON   ==> OFF

385     WITH_PYTHON_INSTALL             ON   ==> OFF

387     WITH_PYTHON_INSTALL_NUMPY       ON   ==> OFF

392     WITH_PYTHON_INSTALL_REQUESTS       ON   ==> OFF

        
401 # Cycles
option WITH_CYCLES			ON     si ON dep = openimageio
option WITH_CYCLES_OSL                  ==> ON dep = openshadinglanguage

!!! -- Could NOT find EMBREE (missing: _embree_LIBRARIES)
option(WITH_CYCLES_EMBREE               OFF  si ON dep = embree

option WITH_CYCLES_CUDA_BINARIES	==> ON dep = cuda
        
URL  GPU et sm_??  : https://developer.nvidia.com/cuda-gpus
https://developer.nvidia.com/cuda-gpus#collapse4

exemple :  GeForce GTX 980    5.2
  -DCYCLES_CUDA_ARCH=sm_52    -DCYCLES_CUDA_BINARIES_ARCH=sm_52

!!! SI PLUSIEURS CUDA BINARIES:
================================
VOIR /0-DataLinux/05-builds-dir-git/blender/build_files/buildbot/slave_compile.py
LIGNE 119:
 cuda_cmake_options.append("-DCYCLES_CUDA_BINARIES_ARCH=sm_30;sm_35;sm_37;sm_50;sm_52;sm_60;sm_61")
exemple : GeForce GTX 980 5.2 ET GeForce GTX 1080TI 6.1
-DCYCLES_CUDA_BINARIES_ARCH=sm_52;sm_61

Lignes 418 ????
option(WITH_CYCLES_LOGGING              ON   ==> OFF
        
!!! A VOIR ???
420 WITH_CYCLES_NATIVE_ONLY	"Build Cycles with native kernel only (which fits current CPU, use for development only)" OFF)
   	==> ON ???

!!! A VOIR ???
429   WITH_CUDA_DYNLOAD     ON


432 # LLVM
$ pacman -Ss llvm | grep install
extra/llvm 7.0.0-2 [installé]
extra/llvm-libs 7.0.0-2 [installé]

433 option(WITH_LLVM   	OFF  ==> ON


# Documentation
Lignes 464 et ...
if(UNIX AND NOT APPLE)
        option(WITH_DOC_MANPAGE "Create a manual page (Unix manpage)" OFF)    ==> ON
endif()


# OpenGL
# OpenGL : VOIR sortie cmd $ glxinfo | grep OpenGL
---------------------------------------------------
Lignes 294 et ...
        option(WITH_SYSTEM_GLEW         ==> OFF
        option(WITH_SYSTEM_GLES         ==> ON

Lignes 470 et ...
INCHANGÉS :
------------
error: VOIR : 00-Erreur-Compile-WITH_GL_PROFILE_CORE-ON.TXT

option(WITH_GL_PROFILE_COMPAT         ON   ==> OFF
OpenGL core profile version string: 4.5.0 NVIDIA 367.27
        option(WITH_GL_PROFILE_CORE         OFF  ==> ON
OpenGL ES profile version string: OpenGL ES 3.2 NVIDIA 367.27
        option(WITH_GL_PROFILE_ES20         OFF  ==> ON
        
TESTS DANS PKGBUILD
        -DWITH_GL_PROFILE_COMPAT=OFF \
        -DWITH_GL_PROFILE_CORE=ON \


# Compiler toolchain
Lignes 509 et ...

# Dependency graph
Lignes 558 et ...


=================================================================

!!!!!!!!!!
!!! SI MODIFS ==> MODIFIER blender.install
==========================================

3-1) MAKEPKG TMPFS en CHROOT EN USER
====================================
!!! ATTENTION : ATTRIBUTS FICHIERS
==================================
$ ls -la
==> 
-rw-r--r--  1 jnd users 55939483 28 janv. 10:37 blender-git-2.80.37.20181211.tar.gz
-rw-r--r--  1 jnd users     1228  1 oct.  16:46 blender.install
-rw-r--r--  1 jnd users      479 25 juin   2017 fix-Error-python3.7-io_mesh_stl.patch
-rw-r--r--  1 jnd users      877  7 août  15:33 fix-SyntaxError-object_facemap_auto.patch
-rw-r--r--  1 jnd users     4070 28 janv. 10:41 PKGBUILD

!!! A MODIFIER SI PAS OK !
===============================

3-1) MAKEPKG TMPFS en CHROOT EN USER
====================================
!!! EN USER

$ mkpkg-chroot-repo

SI depends=( 'openshadinglanguage-git')
==========================================================
$ cp -v $HOME/00-repolocal/openshadinglanguage-git-*-x86_64.pkg.tar.* \
/tmp/chrootrepo/

SI depends=( 'openimageio-git')
==========================================================
$ cp -v $HOME/00-repolocal/openimageio-git-*-x86_64.pkg.tar.* \
/tmp/chrootrepo/

SI depends=( 'opencollada-git' )
==========================================================
$ cp -v $HOME/00-repolocal/opencollada-git-*-x86_64.pkg.tar.* \
/tmp/chrootrepo/

SI depends=( 'opensubdiv-git' )
==========================================================
$ cp -v $HOME/00-repolocal/opensubdiv-git-*-x86_64.pkg.tar.* \
/tmp/chrootrepo/

SI depends=( 'openvdb-git' )
==========================================================
$ cp -v $HOME/00-repolocal/openvdb-git-*-x86_64.pkg.tar.* \
/tmp/chrootrepo/

SI depends=( 'alembic-git' )
==========================================================
$ cp -v $HOME/00-repolocal/alembic-git-*-x86_64.pkg.tar.* \
/tmp/chrootrepo/


-------------------------------------------------------------------
!!! GCC 5.3 ET FAST => OK SI LIGNE SED COMMENTÉE
!!! GCC 5.3 ET FAST => ERREUR : INTERNAL COMPILER ERROR SI LIGNE SED DÉCOMMENTÉE
  FAST
-------
$ rm -f *~
$ mkpkg-tmpfs -m fast -g 16G
OU
$ rm -f *~
$ mkpkg-tmpfs -m fast -g 16G -l logs


$ rm -f *~
$ $HOME/bin/mkpkg-tmpfs -m fast -g 16G
OU
$ rm -f *~
$ $HOME/bin/mkpkg-tmpfs -m fast -g 16G -l logs

-------------------------------------------------------------------

  NATIVE
--------
$ rm -f *~
$ mkpkg-tmpfs -m native -g 16G
OU
$ rm -f *~
$ mkpkg-tmpfs -m native -g 16G -l logs
-------------------------------------------------------------------


$ rm -rf /tmp/chrootrepo

3) MAKEPKG DANS TMP EN USER
====================================
!!! EN ROOT
# pacman -Syu
OU
# maj

rm -f *~ \
&& sudo cp -v /etc/makepkg.conf /etc/makepkg.conf.backup.build.blender \
&& sudo cp -v -f /home/jnd/05-builds/0-copie-fichiers-chroot/makepkg.conf.fast /etc/makepkg.conf \
&& rm -rf /tmp/build \
&& mkdir /tmp/build \
&& cd /tmp/build \
&& cp -v $HOME/05-builds/blender280-git/PKGBUILD . \
&& cp -v $HOME/05-builds/blender280-git/blender-git-2.80.37.20181211.tar.gz . \
&& cp -v $HOME/05-builds/blender280-git/fix-SyntaxError-object_facemap_auto.patch . \
&& cp -v $HOME/05-builds/blender280-git/fix-Error-python3.7-io_mesh_stl.patch . \
&& cp -v $HOME/05-builds/blender280-git/blender.install . \
&& LC_ALL=C makepkg -s \
&& cd $HOME/05-builds/blender280-git \
&& cp -v -f /tmp/build/blender-git-*-x86_64.pkg.tar.* . \
&& rm -rf /tmp/build \
&& sudo mv -v -f /etc/makepkg.conf.backup.build.blender /etc/makepkg.conf

SI ERREUR :
------------
cd $HOME/05-builds/blender280-git \
&& rm -rf /tmp/build \
&& sudo mv -v -f /etc/makepkg.conf.backup.build.blender /etc/makepkg.conf



==> Installing missing dependencies...
resolving dependencies...
:: There are 3 providers available for libgl:
:: Repository extra
   1) libglvnd  2) nvidia-304xx-utils  3) nvidia-340xx-utils

Enter a number (default=1): 


3-2) MAKEPKG en USER sur SSD
=============================
!!! EN USER
cd $HOME/05-builds/blender280-git
$ rm -f *~

makepkg -s

makepkg -f

# Nettoyage...
!!! EN USER
rm -rf pkg src
rm -f *~

# Verifications...

namcap blender-git-*-x86_64.pkg.tar.*
!!! VU
blender-git W: Directory (usr/share/blender/2.79/scripts/addons_contrib) is empty

==> WARNING: Package contains reference to $srcdir
usr/bin/blender
usr/share/blender/2.79/scripts/addons/cycles/shader/node_rgb_to_bw.oso
......
usr/share/blender/2.79/scripts/addons/cycles/shader/node_add_closure.oso


# SUPPRIME ET REMPLACE LE PRÉCÉDENT DANS /0-DataLinux/00-repolocal/
-------------------------------------------------------------------
$ rm /0-DataLinux/00-repolocal/blender-git-*-x86_64.pkg.tar.*

$ cp -v blender-git-*-x86_64.pkg.tar.* /0-DataLinux/00-repolocal/

# DÉPLACE ET REMPLACE LE PRÉCÉDENT DANS  $HOME/00-repolocal
---------------------------------------------------------------
$ mv -v $HOME/00-repolocal/blender-git-*-x86_64.pkg.tar.* \
$HOME/00-repolocal/pkg-OLD/

$ mv -v blender-git-*-x86_64.pkg.tar.* $HOME/00-repolocal/


# SUPPRIME FICHIERS *~ ET FICHIER GIT SOURCE
--------------------------------------------
$ rm -f *~
$ rm -f *.log
$ rm -i blender-git-2.80.37.20181211.tar.gz


$ cd && maj-repolocal
$ sync

!!! EN ROOT
# cd
# pacman -Syu
!!! OU
# pacman -R blender-git blender-addons-yafaray-git
# pacman -Syu blender-git


!!! MODIFIER FICHIERS
!!! EN USER

!!! SI CHANGEMENT DE VERSION ( 2.78 -> 2.79  ... )

$ cd
$ cp -r .config/blender/2.78 .config/blender/2.79
# SUPPRIME FICHIERS bvh_XXXX DANS .config/blender/2.79/cache
$ rm -f .config/blender/2.79/cache/bvh_*

# SUPPRINE VERSION N-2
$ rm -rf .config/blender/2.77

================================================================
TESTS
========

/home/jnd/99-dwl-temp/kernel_config.h
#sed -i "s|-pipe -fPIC -funsigned-char -fno-strict-aliasing|-pipe -fPIC -funsigned-char -fno-strict-aliasing -floop-interchange -floop-strip-mine -floop-block|g" CMakeLists.txt
sed -i "s|define CUDA_KERNEL_MAX_REGISTERS 48|define CUDA_KERNEL_MAX_REGISTERS 64|g" /home/jnd/99-dwl-temp/kernel_config.h


/home/jnd/99-temp/blender/buildinfo.cmake
sed -i 's|MY_WC_HASH "unknown"|MY_WC_HASH "49b5d45118b"|' /home/jnd/99-temp/blender/buildinfo.cmake

sed -i 's|MY_WC_BRANCH "unknown"|MY_WC_BRANCH "blender2.8"|' /home/jnd/99-temp/blender/buildinfo.cmake

sed -i 's|MY_WC_COMMIT_TIMESTAMP 0|MY_WC_COMMIT_TIMESTAMP 1544523312|' /home/jnd/99-temp/blender/buildinfo.cmake

================================================================
ANCIENS
========

