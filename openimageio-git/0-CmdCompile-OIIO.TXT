0) REPERTOIRE
==============
cd $HOME/05-builds/openimageio-git

1-2) ATTENTION A VERSION ET DATE SUR LE SITE
============================================
https://github.com/OpenImageIO/oiio/releases
==> 04/12/2019  ==> 20191204
==> Release-2.0.13
==> 2.0.13.20191204

1.3 SOURCES
==============
cd /0-DataLinux/05-builds-dir-git

wget -O oiio-Release-2.0.13.tar.gz \
https://github.com/OpenImageIO/oiio/archive/Release-2.0.13.tar.gz

1-7) Move ARCHIVE TAR.GZ ds rep compile
==========================================
cd $HOME/05-builds/openimageio-git

!!! CONSERVE Release DANS 05-builds-dir-git
-------------------------------------------
cp -v /0-DataLinux/05-builds-dir-git/oiio-Release-2.0.13.tar.gz .


1-8) FAIRE PATCHES
=====================

voir : CmdFairePatches.TXT
---------------------------


2) MODIFIER LE PKGBUILD
========================
# Maintainer: Name <name@fai.com>

pkgname=openimageio-git
pkgver=2.0.13.20191204
pkgrel=4          # rebuild boost boost-libs 1.72.0
pkgrel=3          # rebuild MAJ opencv 4.2.0

pkgrel=2          # rebuild MAJ openvdb 7.0.0
pkgrel=1

pkgrel=2  # Rebuild MAJ python 3.8

pkgrel=4          # rebuild MAJ openexr 2.4

pkgrel=3    # Rebuild MAJ intel-tbb 2019.9-1
pkgrel=2          # rebuild boost boost-libs 1.71.0

pkgrel=2    # -DCMAKE_C_FLAGS_RELEASE:STRING=-DNDEBUG \
              -DCMAKE_CXX_FLAGS_RELEASE:STRING=-DNDEBUG \

pkgrel=2          # rebuild MAJ libraw 0.19.0 ilmbase/openexr 2.3

pkgrel=2          # gcc 8.1.0
pkgrel=3          # rebuild MAJ ffmpeg 4.0

pkgrel=2          # rebuild CMAKE_INSTALL_LIBDIR=lib

pkgrel=2          # rebuild LICENSE

!!!!!!
_name_release="oiio-Release-2.0.13"

conflicts=('openimageio')
provides=('openimageio')

2-2) PKGBUILD SANS PATCH
========================
source=("$_name_release.tar.gz"
)

sha256sum oiio-Release-2.0.13.tar.gz

sha256sums=('...'
            '...'
)

!!!!!!
depends=(...
        ...
         'qt5-base'
         'python'
         'openvdb-git'
         'libwebp'

makedepends=('cmake' 'boost' 'mesa'
             'robin-map-git'
             'pybind11' 'python-numpy'
)

!!!!!! SUPPRIMÉ
optdepends=(


!!!!!!
!!! VÉRIFIER VERSION PYTHON INSTALLÉE
$ pacman -Ss python | grep 3 | grep install
==> extra/python 3.8.0-1 [installé]

ATTENTION AUX VERSIONS DE PYTHON
PYTHON_VERSION=3.8

!!! VERSION 2.0.13
build() {
      ...
  # Install lib*.so par défaut dans lib64 au lieu de lib
      -DCMAKE_INSTALL_LIBDIR=lib \
  ...

2-3) VERIFIER CMakeLists.txt
============================
mkdir /tmp/srcp

tar -xzf oiio-Release-2.0.13.tar.gz -C /tmp/srcp

1) kwrite /tmp/srcp/oiio-Release-2.0.13/CMakeLists.txt &

LIGNE 42
  CMAKE_BUILD_TYPE      =>      -DCMAKE_BUILD_TYPE=Release

LIGNES 65
  VERBOSE OFF   =>      -DVERBOSE=ON \

LIGNES 70
  OIIO_BUILD_TESTS ON   =>      -DOIIO_BUILD_TESTS=OFF \

LIGNE 71
  USE_OPENGL ON

LIGNE 72
option (USE_QT "Include Qt support" ON)      depends= ... 'qt5-base'

LIGNE 73 ET 74
  USE_PYTHON ON         depends= 'python' 'pybind11' 'python-numpy'
  PYTHON_VERSION "2.7"  =>     -DPYTHON_VERSION=3.7 \

LIGNE 82
  USE_FIELD3D ON       =>      -DUSE_FIELD3D=OFF \

!!! À VOIR
LIGNE 83
  USE_OPENVDB ON      ==>       dépends = ... 'openvdb-git' 

LIGNE 85
  USE_TBB ON        dépends 'intel-tbb'

LIGNE 89
  USE_JPEGTURBO ON      depends= ... 'libjpeg-turbo'

LIGNE 93
  USE_OPENCV ON         depends= ... 'opencv'

LIGNE 94
option (USE_FREETYPE "Use Freetype if found" ON)

LIGNE 95
option (USE_GIF "Use GIF if found" ON)

LIGNE 96
  USE_PTEX ON           =>      -DUSE_PTEX=OFF \

LIGNE 97
  USE__WEBP ON         depends= ... 'libwebp'

LIGNE 101
  USE_NUKE ON           =>      -DUSE_NUKE=OFF \

LIGNE 107
  USE_DICOM ON           =>      -DUSE_DICOM=OFF \

LIGNE 112 et 113
option (BUILD_DOCS "If ON, build documentation and man pages." ON)
option (INSTALL_DOCS "If ON, install documentation and man pages." ON)

LIGNE 114
  INSTALL_FONTS "If ON, install default fonts" ON) => -DINSTALL_FONTS=OFF \

LIGNE 115
option (INSTALL_CMAKE_HELPER "If On, install FindOpenImageIO.cmake" ON)


2) kwrite /tmp/srcp/oiio-Release-2.0.13/src/cmake/compiler.cmake &

LIGNE 7
  USE_CPP 11
  
LIGNE 9
  !!! A VOIR : $ cat /proc/cpuinfo | grep avx2
  USE_SIMD ""         =>      -DUSE_SIMD=avx2 \
  
LIGNE 10 
  STOP_ON_WARNING = OFF
  
  !!! A VOIR : 
LIGNE 11
  HIDE_SYMBOLS = OFF

LIGNE 12
  USE_CCACHE = ON           =>      -DUSE_CCACHE=OFF \

LIGNE 16
  BUILDSTATIC = OFF

LIGNE 18
  CODECOV = OFF

  !!! A VOIR : 
LIGNE 19
set (SANITIZE "" CACHE STRING "Build code using sanitizer (address, thread)")

LIGNE 36
set (GLIBCXX_USE_CXX11_ABI "" CACHE STRING "For gcc, use the new C++11 library ABI (0|1)")


rm -rf /tmp/srcp


!!! ATTENTION : ATTRIBUTS FICHIERS
==================================
$ ls -la
==> 
-rw-r--r--  1 jnd users 27821011 26 nov.  15:36 oiio-Release-2.0.13.tar.gz
-rw-r--r--  1 jnd users     1748 26 nov.  16:01 PKGBUILD

!!! A MODIFIER SI PAS OK !
===============================

3) MAKEPKG DANS TMP EN USER
====================================
!!!! PAS DE COMPILATION DANS /tmp : ==> PROBLÈME AVEC GIF
---------------------------------------------------------
!!! EN ROOT
# pacman -Syu

rm -f *~ \
&& rm -rf /tmp/build \
&& mkdir /tmp/build \
&& cd /tmp/build \
&& cp -v $HOME/05-builds/openimageio-git/PKGBUILD . \
&& cp -v $HOME/05-builds/openimageio-git/oiio-Release-2.0.13.tar.gz . \
&& LC_ALL=C makepkg -s \
&& cd $HOME/05-builds/openimageio-git \
&& cp -v /tmp/build/openimageio-git-*-x86_64.pkg.tar.* . \
&& rm -rf /tmp/build

SI ERREUR :
------------
cd $HOME/05-builds/openimageio-git && rm -rf /tmp/build


3-1) MAKEPKG TMPFS en CHROOT EN USER
====================================
!!! EN USER

$ mkpkg-chroot-repo

SI depends= 'openvdb-git'
SI makedepends= 'robin-map-git'
======================================
$ cp -v $HOME/00-repolocal/\
{\
openvdb-git-*-x86_64.pkg.tar.*,\
robin-map-git-*-any.pkg.tar.*\
} \
/tmp/chrootrepo/


  FLOOP
--------
$ rm -f *~
$ mkpkg-tmpfs -m floop

  FAST
-------
$ rm -f *~
$ mkpkg-tmpfs -m fast

$ mkpkg-tmpfs -m fast -l logs

  NATIVE
--------
$ rm -f *~
$ mkpkg-tmpfs -m native


$ rm -rf /tmp/chrootrepo


3-2) MAKEPKG en USER sur SSD
=============================
!!! EN USER
cd $HOME/05-builds/openimageio-git

$ rm -f *~

makepkg -s

OU : makepkg -f

# Nettoyage...
!!! EN USER

rm -f *~

# Verifications...

==> WARNING: Package contains reference to $srcdir
usr/bin/idiff
usr/bin/oiiotool
usr/lib/libOpenImageIO_Util.so.2.0.13
usr/lib/libOpenImageIO.so.2.0.13
usr/lib/python3.8/site-packages/OpenImageIO.so

namcap openimageio-git-*-x86_64.pkg.tar.*


# SUPPRIME ET REMPLACE LE PRÉCÉDENT DANS /0-DataLinux/00-repolocal/
-------------------------------------------------------------------
$ rm /0-DataLinux/00-repolocal/openimageio-git-*-x86_64.pkg.tar.*

$ cp -v openimageio-git-*-x86_64.pkg.tar.* /0-DataLinux/00-repolocal/

# DÉPLACE ET REMPLACE LE PRÉCÉDENT DANS  $HOME/00-repolocal/pkg-OLD
-----------------------------------------------------------------------
$ mv -v $HOME/00-repolocal/openimageio-git-*-x86_64.pkg.tar.* \
$HOME/00-repolocal/pkg-OLD/

$ mv -v openimageio-git-*-x86_64.pkg.tar.* $HOME/00-repolocal/


# SUPPRIME FICHIERS *~ ET FICHIER GIT SOURCE
--------------------------------------------
$ rm -f *~
$ rm -i oiio-Release-2.0.13.tar.gz


$ cd && maj-repolocal
$ sync


!!!! PAS OBLIGATOIRE SI COMPILE opencollada openimageio openshadinglanguage BLENDER
===================================================================================
!!! EN ROOT
# cd
# maj
OU
# LC_ALL=C pacman -Syu

# LC_ALL=C pacman -Syu openimageio-git


SI PROBLEME
==============
!!! EN ROOT
# pacman -Rdd openimageio-git
# rm /var/cache/pacman/pkg/openimageio-git-*
# pacman -S openimageio-git

POUR REMETTRE openimageio EXTRA
================================
# pacman -Rdd openimageio-git
# rm /var/cache/pacman/pkg/openimageio-git-*
# pacman -Syu openimageio

==================================================================================================
ANCIEN
=======

pkgrel=2          # rebuild boost boost-libs 1.68.0


SI makedepends=("robin-map-git")
================================
$ cp -v $HOME/00-repolocal/robin-map-git-*-any.pkg.tar.* /tmp/chrootrepo/

SI depends=( 'openvdb-git' )
==========================================================
$ cp -v $HOME/00-repolocal/openvdb-git-*-x86_64.pkg.tar.* /tmp/chrootrepo/

!!! VERSION 2.0.13
package() {
  ...
  # Install lib*.so par défaut dans lib64 au lieu de lib
  mv -v "${pkgdir}/usr/lib64" "${pkgdir}/usr/lib"
  ...



pkgrel=2          # opencv 3.3.0-1

pkgrel=2          # rebuild boost boost-libs 1.64.0-1

pkgrel=2          # rebuild libwebp 0.6.0-1
pkgrel=2          # rebuild avec PYTHON 3.6
pkgrel=2          # rebuild boost boost-libs 1.63.0-1

1.3 SOURCES
==============
cd /0-DataLinux/05-builds-dir-git

wget https://github.com/OpenImageIO/oiio/archive/Release-2.0.13.tar.gz
wget -O oiio-Release-2.0.13.tar.gz \
https://github.com/OpenImageIO/oiio/archive/Release-2.0.13.tar.gz

1-4) RENOMMER ARCHIVE TAR.GZ
=================================
mv -v Release-2.0.13.tar.gz oiio-Release-2.0.13.tar.gz

