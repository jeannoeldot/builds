diff -aur OpenUSD-24.11/pxr/pxrConfig.cmake.in OpenUSD-24.11.new/pxr/pxrConfig.cmake.in
--- OpenUSD-24.11/pxr/pxrConfig.cmake.in	2024-10-25 21:10:38.000000000 +0200
+++ OpenUSD-24.11.new/pxr/pxrConfig.cmake.in	2025-01-15 14:26:00.121644648 +0100
@@ -16,6 +16,8 @@
 set(PXR_PATCH_VERSION "@PXR_PATCH_VERSION@")
 set(PXR_VERSION "@PXR_VERSION@")
 
+include(CMakeFindDependencyMacro)
+
 # If Python support was enabled for this USD build, find the import
 # targets by invoking the appropriate FindPython module. Use the same
 # LIBRARY and INCLUDE_DIR settings from the original build if they
@@ -41,9 +43,9 @@
     endif()
 
     if (NOT DEFINED Python3_VERSION)
-        find_package(Python3 "@Python3_VERSION@" EXACT COMPONENTS Development REQUIRED)
+        find_dependency(Python3 "@Python3_VERSION@" EXACT COMPONENTS Development)
     else()
-        find_package(Python3 COMPONENTS Development REQUIRED)
+        find_dependency(Python3 COMPONENTS Development)
     endif()
 endif()
 
@@ -57,7 +59,11 @@
             set(MaterialX_DIR [[@MaterialX_DIR@]])
         endif()
     endif()
-    find_package(MaterialX REQUIRED)
+    find_dependency(MaterialX)
+endif()
+
+if(@PXR_ENABLE_GL_SUPPORT@)
+    find_dependency(OpenGL)
 endif()
 
 # Similar to MaterialX above, we are using Imath's cmake package config, so set
@@ -71,7 +77,7 @@
             set(Imath_DIR [[@Imath_DIR@]])
         endif()
     endif()
-    find_package(Imath REQUIRED)
+    find_dependency(Imath)
 endif()
 
 include("${PXR_CMAKE_DIR}/cmake/pxrTargets.cmake")
