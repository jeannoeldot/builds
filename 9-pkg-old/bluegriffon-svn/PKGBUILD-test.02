# Maintainer: JND

pkgname=bluegriffon-svn
pkgver=1.7.1195
pkgrel=1
_bgname=bluegriffon
_bgver=1.7
_ffver=21.0

pkgdesc="New WYSIWYG content editor for the Web powered by Gecko"
url="http://bluegriffon.org/"
arch=('i686' 'x86_64')
license=('MPL' 'GPL' 'LGPL')
depends=('gtk2' 'mozilla-common' 'nss' 'libxt' 'hunspell' 'startup-notification'
         'mime-types' 'dbus-glib' 'alsa-lib' 'sqlite3' 'libnotify' 'desktop-file-utils' 'libvpx'
         'libevent' 'hicolor-icon-theme' 'nspr'
)
makedepends=('unzip' 'zip' 'pkg-config' 'diffutils' 'python2' 'wireless_tools'
             'yasm' 'mesa' 'autoconf2.13' 'libidl2' 'xorg-server-xvfb' 'gconf'
)

provides=("bluegriffon")
conflicts=("bluegriffon")

install=bluegriffon.install

#options=('!emptydirs')

source=("http://releases.mozilla.org/pub/mozilla.org/firefox/releases/${_ffver}/source/firefox-${_ffver}.source.tar.bz2"
	"${pkgname}-${pkgver}.tar.bz2"
        'mozconfig'
	'bluegriffon.sh'
        'bluegriffon.desktop'
	'1.7-bluegriffon-config-content.patch'
	'1.7-prefs.patch'
	'shared-libs.patch'
)
md5sums=('6e2510e9466b280c367de0e4c05a8840'
	 '752e2a928da5b9c1d5eb48ccd3286d71'
         'd57bf672cd63e1c99616734154e3804b'
         '9c5c47f5d0f5f36a3abd8bfecf6c5d8d'
         '044abfeea6a59f084d5d2fbc89368f8b'
         '6afac6a96e31e0bb633a2a044f640853'
         '9af723a30f031822d4312013b86f380b'
         '52e52f840a49eb1d14be1c0065b03a93'
)

prepare() {
  cd mozilla-release

#  tar xjf "${srcdir}/${pkgname}-${pkgver}.tar.bz2"
  cp -R ../bluegriffon .

  # voir http://bluegriffon.org/pages/Build-BlueGriffon
  # patch -p 1 < bluegriffon/config/content.patch
  # bluegriffon/config/content.patch rewritted
  patch -Np1 -i ../1.7-bluegriffon-config-content.patch

  # My preferences
  patch -Np1 -i ../1.7-prefs.patch

  # voir PKGBUILD firefox 21.0 sur extra
  patch -Np1 -i ../shared-libs.patch
  # Fix PRE_RELEASE_SUFFIX
  sed -i '/^PRE_RELEASE_SUFFIX := ""/s/ ""//' \
    browser/base/Makefile.in

  # WebRTC build tries to execute "python" and expects Python 2
  mkdir "$srcdir/path"
  ln -s /usr/bin/python2 "$srcdir/path/python"

  # Don't exit with error when some libs are missing which we have in system.
  sed '/^MOZ_PKG_FATAL_WARNINGS/s@= 1@= 0@' \
      -i "${_bgname}/installer/Makefile.in"

  # configure script misdetects the preprocessor without an optimization level
  # https://bugs.archlinux.org/task/34644
  sed -i '/ac_cpp=/s/$CPPFLAGS/& -O2/' configure

  cp ../mozconfig .mozconfig

}

build() {
  cd mozilla-release

  export PATH="$srcdir/path:$PATH"
#  export CFLAGS="$CFLAGS -fomit-frame-pointer -floop-interchange -floop-strip-mine -floop-block"
#  export CXXFLAGS="$CXXFLAGS -fomit-frame-pointer -floop-interchange -floop-strip-mine -floop-block"
  export LDFLAGS="$LDFLAGS -Wl,-rpath,/usr/lib/${_bgname}"
  export PYTHON="/usr/bin/python2"

#  make -f client.mk build_all MOZ_MAKE_FLAGS="$MAKEFLAGS"
  make -f client.mk build MOZ_MAKE_FLAGS="$MAKEFLAGS"
}

package() {
  cd mozilla-release

  # No Make install for now :(
  #make DESTDIR="$pkgdir/" -C bg-trunk install

  install -d -m 755 ${pkgdir}/usr/bin
  install -d -m 755 ${pkgdir}/usr/lib/${_bgname}
  install -d -m 755 ${pkgdir}/usr/share/applications

  # VOIR : https://github.com/remicollet/remirepo/blob/master/bluegriffon/bluegriffon.spec
  cd bg-trunk
  tar --create --file - --dereference --directory=dist/bin --exclude xulrunner . \
  | tar --extract --file - --directory ${pkgdir}/usr/lib/${_bgname}

#  cd "${srcdir}"/mozilla-release
  cd ..

  # Launcher
  cp ../bluegriffon.sh ${pkgdir}/usr/bin/${_bgname}
  chmod 755 ${pkgdir}/usr/bin/${_bgname}

  # Icons
  install -D -m 644 ${_bgname}/app/icons/default16.png "${pkgdir}/usr/share/icons/hicolor/16x16/apps/${_bgname}.png"
  install -D -m 644 ${_bgname}/app/icons/default32.png "${pkgdir}/usr/share/icons/hicolor/32x32/apps/${_bgname}.png"
  install -D -m 644 ${_bgname}/app/icons/default48.png "${pkgdir}/usr/share/icons/hicolor/48x48/apps/${_bgname}.png"
  install -D -m 644 ${_bgname}/app/icons/default50.png "${pkgdir}/usr/share/icons/hicolor/64x64/apps/${_bgname}.png"
  install -D -m 644 ${_bgname}/app/icons/bluegriffon128.png "${pkgdir}/usr/share/icons/hicolor/128x128/apps/${_bgname}.png"

  # Desktop
  install -D -m 644 ../${_bgname}.desktop "${pkgdir}/usr/share/applications/${_bgname}.desktop"

  # Use the system hunspell dictionaries
  rm -rf "${pkgdir}/usr/lib/${_bgname}/{dictionaries,hyphenation}"
  ln -sf /usr/share/hunspell "$pkgdir/usr/lib/${_bgname}/dictionaries"
  ln -sf /usr/share/hyphen "$pkgdir/usr/lib/${_bgname}/hyphenation"
  #ln -sf /usr/share/myspell/dicts "${pkgdir}/usr/lib/${_bgname}/dictionaries"
}
