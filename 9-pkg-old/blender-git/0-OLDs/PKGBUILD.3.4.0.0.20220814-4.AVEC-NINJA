# Maintainer: Name <name@fai.com>

pkgname=blender-git
pkgver=3.4.0.0.20220814
pkgrel=4
pkgdesc="A fully integrated 3D graphics creation suite"
arch=('x86_64')
license=('GPL')
url="https://blender.org/"
depends=('desktop-file-utils' 'hicolor-icon-theme' 'shared-mime-info'
          'libjpeg' 'libpng' 'openjpeg2' 'libtiff' 'openexr' 'libwebp'
          'python'
          'ffmpeg' 'fftw'
          'openal' 'freetype2' 'libsndfile' 'jack2' 'pipewire-pulse'
          'sdl2'
          'libgl' 'glfw-x11'
          'libxi' 'libxmu' 'libxxf86vm' 'libxfixes' 'libxrender'
          'boost-libs' 'tbb'
          'jemalloc'
          'python-numpy' 'python-requests' 'python-zstandard' 'pystring'
          'fmt'
          'llvm-libs' 'clang'
          'potrace' 'pugixml' 'libharu'
          'opencolorio'
          'opencollada-git' 'openimageio-git'
          'openshadinglanguage-git' 'clang'
          'opensubdiv-git' 'openvdb-git' 'alembic-git'
          'embree-git' 'openimagedenoise-git'
          'zstd'
)
makedepends=('cmake' 'boost' 'mesa' 'llvm'
             'cuda'
             'git'
             'ninja'
)
optdepends=('cuda: cycles renderer cuda support')
conflicts=('blender')
provides=('blender')
#options=('!strip')
source=("$pkgname-$pkgver.tar.gz"
        "OptiX-7.4.0-include.zip"
)
sha256sums=('9f089355e44aef75e49bfc273bc53f9eaf6d664d3a631560b8f6b9113b916706'
            '283ceb65d47a697d8776bb3d56273bf78b53d57110cfd1a4cac4456888687713'
)

_gitname="blender"

prepare() {
  cd "${_gitname}"

  ## Cycles: Workaround for performance loss with the CUDA 9.0 SDK.
  ## Commit 1febc858559c054603073301a6c6dae44c737830 du 21/11/2017. Stefan Werner
  #sed -i -e "s|define CUDA_KERNEL_MAX_REGISTERS 48|define CUDA_KERNEL_MAX_REGISTERS 64|" intern/cycles/kernel/kernels/cuda/kernel_config.h

  # Buildinfo : Workaround for HASH, BRANCH et COMMIT_TIMESTAMP
  sed -i -e 's|MY_WC_HASH "unknown"|MY_WC_HASH "64f0c25a4655"|' build_files/cmake/buildinfo.cmake
  sed -i -e 's|MY_WC_BRANCH "unknown"|MY_WC_BRANCH "master"|' build_files/cmake/buildinfo.cmake
  sed -i -e 's|MY_WC_COMMIT_TIMESTAMP 0|MY_WC_COMMIT_TIMESTAMP 1660444451|' build_files/cmake/buildinfo.cmake
}

build() {
  cd "${_gitname}"
  
  local PYTHON_VER=3.10

  cmake \
        -Bbuild \
        -GNinja \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_C_FLAGS_RELEASE:STRING=-DNDEBUG \
        -DCMAKE_CXX_FLAGS_RELEASE:STRING=-DNDEBUG \
        -DCMAKE_SKIP_RPATH=ON \
        -DOPTIX_ROOT_DIR="${srcdir}"/include \
        -DWITH_XR_OPENXR=OFF \
        -DWITH_SYSTEM_FREETYPE=ON \
        -DWITH_USD=OFF \
        -DWITH_INPUT_NDOF=OFF \
        -DWITH_INSTALL_PORTABLE=OFF \
        -DWITH_PYTHON_INSTALL=OFF \
        -DWITH_PYTHON_INSTALL_NUMPY=OFF \
        -DWITH_PYTHON_INSTALL_REQUESTS=OFF \
        -DWITH_PYTHON_INSTALL_ZSTANDARD=OFF \
        -DWITH_CYCLES_CUDA_BINARIES=ON \
        -DCYCLES_CUDA_BINARIES_ARCH="sm_86" \
        -DWITH_CYCLES_NATIVE_ONLY=ON \
        -DWITH_CYCLES_DEVICE_HIP=OFF \
        -DWITH_CYCLES_DEVICE_METAL=OFF \
        -DWITH_LLVM=ON \
        -DWITH_CLANG=ON \
        -DPYTHON_VERSION=${PYTHON_VER} \
        -DPYTHON_LIBPATH=/usr/lib \
        -DPYTHON_LIBRARY=python${PYTHON_VER} \
        -DPYTHON_INCLUDE_DIRS=/usr/include/python${PYTHON_VER}
  ninja -C build
}

package() {
  # Blender
  cd "${_gitname}"
  DESTDIR="${pkgdir}" ninja -C build install

  # voir Community
  python -m compileall -d /usr/share/blender "${pkgdir}/usr/share/blender"
  python -O -m compileall -d /usr/share/blender "${pkgdir}/usr/share/blender"
  
  install -Dm644 release/freedesktop/org.blender.Blender.appdata.xml "${pkgdir}/usr/share/metainfo/org.blender.Blender.appdata.xml"
}
